{
    "swagger": "2.0",
    "info": {
        "title": "luckincoffee cloud apis",
        "version": "v1.0"
    },
    "securityDefinitions": {
        "BearerToken": {
            "description": "Bearer Token authentication",
            "type": "apiKey",
            "name": "authorization",
            "in": "header"
        }
    },
    "security": [
        {
            "BearerToken": []
        }
    ],
    "paths": {
        "/api/v1/namespaces/{namespace}/pods": {
            "delete": {
                "consumes": [
                    "*/*"
                ],
                "description": "delete collection of Pod",
                "operationId": "deleteCoreV1CollectionNamespacedPod",
                "parameters": [
                    {
                        "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
                        "in": "query",
                        "name": "continue",
                        "type": "string",
                        "uniqueItems": true
                    },
                    {
                        "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
                        "in": "query",
                        "name": "fieldSelector",
                        "type": "string",
                        "uniqueItems": true
                    },
                    {
                        "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
                        "in": "query",
                        "name": "labelSelector",
                        "type": "string",
                        "uniqueItems": true
                    },
                    {
                        "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
                        "in": "query",
                        "name": "limit",
                        "type": "integer",
                        "uniqueItems": true
                    },
                    {
                        "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
                        "in": "query",
                        "name": "resourceVersion",
                        "type": "string",
                        "uniqueItems": true
                    },
                    {
                        "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
                        "in": "query",
                        "name": "timeoutSeconds",
                        "type": "integer",
                        "uniqueItems": true
                    },
                    {
                        "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                        "in": "query",
                        "name": "watch",
                        "type": "boolean",
                        "uniqueItems": true
                    }
                ],
                "produces": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "schemes": [
                    "https"
                ],
                "tags": [
                    "core_v1"
                ],
                "x-kubernetes-action": "deletecollection",
                "x-kubernetes-group-version-kind": {
                    "group": "",
                    "kind": "Pod",
                    "version": "v1"
                }
            },
            "get": {
                "consumes": [
                    "*/*"
                ],
                "description": "list or watch objects of kind Pod",
                "operationId": "listCoreV1NamespacedPod",
                "parameters": [
                    {
                        "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
                        "in": "query",
                        "name": "continue",
                        "type": "string",
                        "uniqueItems": true
                    },
                    {
                        "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
                        "in": "query",
                        "name": "fieldSelector",
                        "type": "string",
                        "uniqueItems": true
                    },
                    {
                        "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
                        "in": "query",
                        "name": "labelSelector",
                        "type": "string",
                        "uniqueItems": true
                    },
                    {
                        "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
                        "in": "query",
                        "name": "limit",
                        "type": "integer",
                        "uniqueItems": true
                    },
                    {
                        "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
                        "in": "query",
                        "name": "resourceVersion",
                        "type": "string",
                        "uniqueItems": true
                    },
                    {
                        "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
                        "in": "query",
                        "name": "timeoutSeconds",
                        "type": "integer",
                        "uniqueItems": true
                    },
                    {
                        "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                        "in": "query",
                        "name": "watch",
                        "type": "boolean",
                        "uniqueItems": true
                    }
                ],
                "produces": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf",
                    "application/json;stream=watch",
                    "application/vnd.kubernetes.protobuf;stream=watch"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.api.core.v1.PodList"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "schemes": [
                    "https"
                ],
                "tags": [
                    "core_v1"
                ],
                "x-kubernetes-action": "list",
                "x-kubernetes-group-version-kind": {
                    "group": "",
                    "kind": "Pod",
                    "version": "v1"
                }
            },
            "parameters": [
                {
                    "description": "If true, partially initialized resources are included in the response.",
                    "in": "query",
                    "name": "includeUninitialized",
                    "type": "boolean",
                    "uniqueItems": true
                },
                {
                    "description": "object name and auth scope, such as for teams and projects",
                    "in": "path",
                    "name": "namespace",
                    "required": true,
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "If 'true', then the output is pretty printed.",
                    "in": "query",
                    "name": "pretty",
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "id of k8s cluster",
                    "name": "clusterid",
                    "in": "query"
                }
            ],
            "post": {
                "consumes": [
                    "*/*"
                ],
                "description": "create a Pod",
                "operationId": "createCoreV1NamespacedPod",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/io.k8s.api.core.v1.Pod"
                        }
                    },
                    {
                        "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
                        "in": "query",
                        "name": "dryRun",
                        "type": "string",
                        "uniqueItems": true
                    }
                ],
                "produces": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.api.core.v1.Pod"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.api.core.v1.Pod"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.api.core.v1.Pod"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "schemes": [
                    "https"
                ],
                "tags": [
                    "core_v1"
                ],
                "x-kubernetes-action": "post",
                "x-kubernetes-group-version-kind": {
                    "group": "",
                    "kind": "Pod",
                    "version": "v1"
                }
            }
        },
        "/api/v1/namespaces/{namespace}/pods/{name}": {
            "delete": {
                "consumes": [
                    "*/*"
                ],
                "description": "delete a Pod",
                "operationId": "deleteCoreV1NamespacedPod",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
                        }
                    },
                    {
                        "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
                        "in": "query",
                        "name": "dryRun",
                        "type": "string",
                        "uniqueItems": true
                    },
                    {
                        "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
                        "in": "query",
                        "name": "gracePeriodSeconds",
                        "type": "integer",
                        "uniqueItems": true
                    },
                    {
                        "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
                        "in": "query",
                        "name": "orphanDependents",
                        "type": "boolean",
                        "uniqueItems": true
                    },
                    {
                        "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                        "in": "query",
                        "name": "propagationPolicy",
                        "type": "string",
                        "uniqueItems": true
                    }
                ],
                "produces": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "schemes": [
                    "https"
                ],
                "tags": [
                    "core_v1"
                ],
                "x-kubernetes-action": "delete",
                "x-kubernetes-group-version-kind": {
                    "group": "",
                    "kind": "Pod",
                    "version": "v1"
                }
            },
            "get": {
                "consumes": [
                    "*/*"
                ],
                "description": "read the specified Pod",
                "operationId": "readCoreV1NamespacedPod",
                "parameters": [
                    {
                        "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'.",
                        "in": "query",
                        "name": "exact",
                        "type": "boolean",
                        "uniqueItems": true
                    },
                    {
                        "description": "Should this value be exported.  Export strips fields that a user can not specify.",
                        "in": "query",
                        "name": "export",
                        "type": "boolean",
                        "uniqueItems": true
                    }
                ],
                "produces": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.api.core.v1.Pod"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "schemes": [
                    "https"
                ],
                "tags": [
                    "core_v1"
                ],
                "x-kubernetes-action": "get",
                "x-kubernetes-group-version-kind": {
                    "group": "",
                    "kind": "Pod",
                    "version": "v1"
                }
            },
            "parameters": [
                {
                    "description": "name of the Pod",
                    "in": "path",
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "object name and auth scope, such as for teams and projects",
                    "in": "path",
                    "name": "namespace",
                    "required": true,
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "If 'true', then the output is pretty printed.",
                    "in": "query",
                    "name": "pretty",
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "id of k8s cluster",
                    "name": "clusterid",
                    "in": "query"
                }
            ],
            "patch": {
                "consumes": [
                    "application/json-patch+json",
                    "application/merge-patch+json",
                    "application/strategic-merge-patch+json"
                ],
                "description": "partially update the specified Pod",
                "operationId": "patchCoreV1NamespacedPod",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
                        }
                    },
                    {
                        "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
                        "in": "query",
                        "name": "dryRun",
                        "type": "string",
                        "uniqueItems": true
                    }
                ],
                "produces": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.api.core.v1.Pod"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "schemes": [
                    "https"
                ],
                "tags": [
                    "core_v1"
                ],
                "x-kubernetes-action": "patch",
                "x-kubernetes-group-version-kind": {
                    "group": "",
                    "kind": "Pod",
                    "version": "v1"
                }
            },
            "put": {
                "consumes": [
                    "*/*"
                ],
                "description": "replace the specified Pod",
                "operationId": "replaceCoreV1NamespacedPod",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/io.k8s.api.core.v1.Pod"
                        }
                    },
                    {
                        "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
                        "in": "query",
                        "name": "dryRun",
                        "type": "string",
                        "uniqueItems": true
                    }
                ],
                "produces": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.api.core.v1.Pod"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.api.core.v1.Pod"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "schemes": [
                    "https"
                ],
                "tags": [
                    "core_v1"
                ],
                "x-kubernetes-action": "put",
                "x-kubernetes-group-version-kind": {
                    "group": "",
                    "kind": "Pod",
                    "version": "v1"
                }
            }
        },
        "/api/v1/namespaces/{namespace}/pods/{name}/attach": {
            "get": {
                "consumes": [
                    "*/*"
                ],
                "description": "connect GET requests to attach of Pod",
                "operationId": "connectCoreV1GetNamespacedPodAttach",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "schemes": [
                    "https"
                ],
                "tags": [
                    "core_v1"
                ],
                "x-kubernetes-action": "connect",
                "x-kubernetes-group-version-kind": {
                    "group": "",
                    "kind": "PodAttachOptions",
                    "version": "v1"
                }
            },
            "parameters": [
                {
                    "description": "The container in which to execute the command. Defaults to only container if there is only one container in the pod.",
                    "in": "query",
                    "name": "container",
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "name of the PodAttachOptions",
                    "in": "path",
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "object name and auth scope, such as for teams and projects",
                    "in": "path",
                    "name": "namespace",
                    "required": true,
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "Stderr if true indicates that stderr is to be redirected for the attach call. Defaults to true.",
                    "in": "query",
                    "name": "stderr",
                    "type": "boolean",
                    "uniqueItems": true
                },
                {
                    "description": "Stdin if true, redirects the standard input stream of the pod for this call. Defaults to false.",
                    "in": "query",
                    "name": "stdin",
                    "type": "boolean",
                    "uniqueItems": true
                },
                {
                    "description": "Stdout if true indicates that stdout is to be redirected for the attach call. Defaults to true.",
                    "in": "query",
                    "name": "stdout",
                    "type": "boolean",
                    "uniqueItems": true
                },
                {
                    "description": "TTY if true indicates that a tty will be allocated for the attach call. This is passed through the container runtime so the tty is allocated on the worker node by the container runtime. Defaults to false.",
                    "in": "query",
                    "name": "tty",
                    "type": "boolean",
                    "uniqueItems": true
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "id of k8s cluster",
                    "name": "clusterid",
                    "in": "query"
                }
            ],
            "post": {
                "consumes": [
                    "*/*"
                ],
                "description": "connect POST requests to attach of Pod",
                "operationId": "connectCoreV1PostNamespacedPodAttach",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "schemes": [
                    "https"
                ],
                "tags": [
                    "core_v1"
                ],
                "x-kubernetes-action": "connect",
                "x-kubernetes-group-version-kind": {
                    "group": "",
                    "kind": "PodAttachOptions",
                    "version": "v1"
                }
            }
        },
        "/api/v1/namespaces/{namespace}/pods/{name}/binding": {
            "parameters": [
                {
                    "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
                    "in": "query",
                    "name": "dryRun",
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "If IncludeUninitialized is specified, the object may be returned without completing initialization.",
                    "in": "query",
                    "name": "includeUninitialized",
                    "type": "boolean",
                    "uniqueItems": true
                },
                {
                    "description": "name of the Binding",
                    "in": "path",
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "object name and auth scope, such as for teams and projects",
                    "in": "path",
                    "name": "namespace",
                    "required": true,
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "If 'true', then the output is pretty printed.",
                    "in": "query",
                    "name": "pretty",
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "id of k8s cluster",
                    "name": "clusterid",
                    "in": "query"
                }
            ],
            "post": {
                "consumes": [
                    "*/*"
                ],
                "description": "create binding of a Pod",
                "operationId": "createCoreV1NamespacedPodBinding",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/io.k8s.api.core.v1.Binding"
                        }
                    }
                ],
                "produces": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.api.core.v1.Binding"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.api.core.v1.Binding"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.api.core.v1.Binding"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "schemes": [
                    "https"
                ],
                "tags": [
                    "core_v1"
                ],
                "x-kubernetes-action": "post",
                "x-kubernetes-group-version-kind": {
                    "group": "",
                    "kind": "Binding",
                    "version": "v1"
                }
            }
        },
        "/api/v1/namespaces/{namespace}/pods/{name}/eviction": {
            "parameters": [
                {
                    "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
                    "in": "query",
                    "name": "dryRun",
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "If IncludeUninitialized is specified, the object may be returned without completing initialization.",
                    "in": "query",
                    "name": "includeUninitialized",
                    "type": "boolean",
                    "uniqueItems": true
                },
                {
                    "description": "name of the Eviction",
                    "in": "path",
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "object name and auth scope, such as for teams and projects",
                    "in": "path",
                    "name": "namespace",
                    "required": true,
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "If 'true', then the output is pretty printed.",
                    "in": "query",
                    "name": "pretty",
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "id of k8s cluster",
                    "name": "clusterid",
                    "in": "query"
                }
            ],
            "post": {
                "consumes": [
                    "*/*"
                ],
                "description": "create eviction of a Pod",
                "operationId": "createCoreV1NamespacedPodEviction",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/io.k8s.api.policy.v1beta1.Eviction"
                        }
                    }
                ],
                "produces": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.api.policy.v1beta1.Eviction"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.api.policy.v1beta1.Eviction"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.api.policy.v1beta1.Eviction"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "schemes": [
                    "https"
                ],
                "tags": [
                    "core_v1"
                ],
                "x-kubernetes-action": "post",
                "x-kubernetes-group-version-kind": {
                    "group": "policy",
                    "kind": "Eviction",
                    "version": "v1beta1"
                }
            }
        },
        "/api/v1/namespaces/{namespace}/pods/{name}/exec": {
            "get": {
                "consumes": [
                    "*/*"
                ],
                "description": "connect GET requests to exec of Pod",
                "operationId": "connectCoreV1GetNamespacedPodExec",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "schemes": [
                    "https"
                ],
                "tags": [
                    "core_v1"
                ],
                "x-kubernetes-action": "connect",
                "x-kubernetes-group-version-kind": {
                    "group": "",
                    "kind": "PodExecOptions",
                    "version": "v1"
                }
            },
            "parameters": [
                {
                    "description": "Command is the remote command to execute. argv array. Not executed within a shell.",
                    "in": "query",
                    "name": "command",
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "Container in which to execute the command. Defaults to only container if there is only one container in the pod.",
                    "in": "query",
                    "name": "container",
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "name of the PodExecOptions",
                    "in": "path",
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "object name and auth scope, such as for teams and projects",
                    "in": "path",
                    "name": "namespace",
                    "required": true,
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "Redirect the standard error stream of the pod for this call. Defaults to true.",
                    "in": "query",
                    "name": "stderr",
                    "type": "boolean",
                    "uniqueItems": true
                },
                {
                    "description": "Redirect the standard input stream of the pod for this call. Defaults to false.",
                    "in": "query",
                    "name": "stdin",
                    "type": "boolean",
                    "uniqueItems": true
                },
                {
                    "description": "Redirect the standard output stream of the pod for this call. Defaults to true.",
                    "in": "query",
                    "name": "stdout",
                    "type": "boolean",
                    "uniqueItems": true
                },
                {
                    "description": "TTY if true indicates that a tty will be allocated for the exec call. Defaults to false.",
                    "in": "query",
                    "name": "tty",
                    "type": "boolean",
                    "uniqueItems": true
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "id of k8s cluster",
                    "name": "clusterid",
                    "in": "query"
                }
            ],
            "post": {
                "consumes": [
                    "*/*"
                ],
                "description": "connect POST requests to exec of Pod",
                "operationId": "connectCoreV1PostNamespacedPodExec",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "schemes": [
                    "https"
                ],
                "tags": [
                    "core_v1"
                ],
                "x-kubernetes-action": "connect",
                "x-kubernetes-group-version-kind": {
                    "group": "",
                    "kind": "PodExecOptions",
                    "version": "v1"
                }
            }
        },
        "/api/v1/namespaces/{namespace}/pods/{name}/log": {
            "get": {
                "consumes": [
                    "*/*"
                ],
                "description": "read log of the specified Pod",
                "operationId": "readCoreV1NamespacedPodLog",
                "produces": [
                    "text/plain",
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "schemes": [
                    "https"
                ],
                "tags": [
                    "core_v1"
                ],
                "x-kubernetes-action": "get",
                "x-kubernetes-group-version-kind": {
                    "group": "",
                    "kind": "Pod",
                    "version": "v1"
                }
            },
            "parameters": [
                {
                    "description": "The container for which to stream logs. Defaults to only container if there is one container in the pod.",
                    "in": "query",
                    "name": "container",
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "Follow the log stream of the pod. Defaults to false.",
                    "in": "query",
                    "name": "follow",
                    "type": "boolean",
                    "uniqueItems": true
                },
                {
                    "description": "If set, the number of bytes to read from the server before terminating the log output. This may not display a complete final line of logging, and may return slightly more or slightly less than the specified limit.",
                    "in": "query",
                    "name": "limitBytes",
                    "type": "integer",
                    "uniqueItems": true
                },
                {
                    "description": "name of the Pod",
                    "in": "path",
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "object name and auth scope, such as for teams and projects",
                    "in": "path",
                    "name": "namespace",
                    "required": true,
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "If 'true', then the output is pretty printed.",
                    "in": "query",
                    "name": "pretty",
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "Return previous terminated container logs. Defaults to false.",
                    "in": "query",
                    "name": "previous",
                    "type": "boolean",
                    "uniqueItems": true
                },
                {
                    "description": "A relative time in seconds before the current time from which to show logs. If this value precedes the time a pod was started, only logs since the pod start will be returned. If this value is in the future, no logs will be returned. Only one of sinceSeconds or sinceTime may be specified.",
                    "in": "query",
                    "name": "sinceSeconds",
                    "type": "integer",
                    "uniqueItems": true
                },
                {
                    "description": "If set, the number of lines from the end of the logs to show. If not specified, logs are shown from the creation of the container or sinceSeconds or sinceTime",
                    "in": "query",
                    "name": "tailLines",
                    "type": "integer",
                    "uniqueItems": true
                },
                {
                    "description": "If true, add an RFC3339 or RFC3339Nano timestamp at the beginning of every line of log output. Defaults to false.",
                    "in": "query",
                    "name": "timestamps",
                    "type": "boolean",
                    "uniqueItems": true
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "id of k8s cluster",
                    "name": "clusterid",
                    "in": "query"
                }
            ]
        },
        "/api/v1/namespaces/{namespace}/pods/{name}/portforward": {
            "get": {
                "consumes": [
                    "*/*"
                ],
                "description": "connect GET requests to portforward of Pod",
                "operationId": "connectCoreV1GetNamespacedPodPortforward",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "schemes": [
                    "https"
                ],
                "tags": [
                    "core_v1"
                ],
                "x-kubernetes-action": "connect",
                "x-kubernetes-group-version-kind": {
                    "group": "",
                    "kind": "PodPortForwardOptions",
                    "version": "v1"
                }
            },
            "parameters": [
                {
                    "description": "name of the PodPortForwardOptions",
                    "in": "path",
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "object name and auth scope, such as for teams and projects",
                    "in": "path",
                    "name": "namespace",
                    "required": true,
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "List of ports to forward Required when using WebSockets",
                    "in": "query",
                    "name": "ports",
                    "type": "integer",
                    "uniqueItems": true
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "id of k8s cluster",
                    "name": "clusterid",
                    "in": "query"
                }
            ],
            "post": {
                "consumes": [
                    "*/*"
                ],
                "description": "connect POST requests to portforward of Pod",
                "operationId": "connectCoreV1PostNamespacedPodPortforward",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "schemes": [
                    "https"
                ],
                "tags": [
                    "core_v1"
                ],
                "x-kubernetes-action": "connect",
                "x-kubernetes-group-version-kind": {
                    "group": "",
                    "kind": "PodPortForwardOptions",
                    "version": "v1"
                }
            }
        },
        "/api/v1/namespaces/{namespace}/pods/{name}/proxy": {
            "delete": {
                "consumes": [
                    "*/*"
                ],
                "description": "connect DELETE requests to proxy of Pod",
                "operationId": "connectCoreV1DeleteNamespacedPodProxy",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "schemes": [
                    "https"
                ],
                "tags": [
                    "core_v1"
                ],
                "x-kubernetes-action": "connect",
                "x-kubernetes-group-version-kind": {
                    "group": "",
                    "kind": "PodProxyOptions",
                    "version": "v1"
                }
            },
            "get": {
                "consumes": [
                    "*/*"
                ],
                "description": "connect GET requests to proxy of Pod",
                "operationId": "connectCoreV1GetNamespacedPodProxy",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "schemes": [
                    "https"
                ],
                "tags": [
                    "core_v1"
                ],
                "x-kubernetes-action": "connect",
                "x-kubernetes-group-version-kind": {
                    "group": "",
                    "kind": "PodProxyOptions",
                    "version": "v1"
                }
            },
            "head": {
                "consumes": [
                    "*/*"
                ],
                "description": "connect HEAD requests to proxy of Pod",
                "operationId": "connectCoreV1HeadNamespacedPodProxy",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "schemes": [
                    "https"
                ],
                "tags": [
                    "core_v1"
                ],
                "x-kubernetes-action": "connect",
                "x-kubernetes-group-version-kind": {
                    "group": "",
                    "kind": "PodProxyOptions",
                    "version": "v1"
                }
            },
            "options": {
                "consumes": [
                    "*/*"
                ],
                "description": "connect OPTIONS requests to proxy of Pod",
                "operationId": "connectCoreV1OptionsNamespacedPodProxy",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "schemes": [
                    "https"
                ],
                "tags": [
                    "core_v1"
                ],
                "x-kubernetes-action": "connect",
                "x-kubernetes-group-version-kind": {
                    "group": "",
                    "kind": "PodProxyOptions",
                    "version": "v1"
                }
            },
            "parameters": [
                {
                    "description": "name of the PodProxyOptions",
                    "in": "path",
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "object name and auth scope, such as for teams and projects",
                    "in": "path",
                    "name": "namespace",
                    "required": true,
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "Path is the URL path to use for the current proxy request to pod.",
                    "in": "query",
                    "name": "path",
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "id of k8s cluster",
                    "name": "clusterid",
                    "in": "query"
                }
            ],
            "patch": {
                "consumes": [
                    "*/*"
                ],
                "description": "connect PATCH requests to proxy of Pod",
                "operationId": "connectCoreV1PatchNamespacedPodProxy",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "schemes": [
                    "https"
                ],
                "tags": [
                    "core_v1"
                ],
                "x-kubernetes-action": "connect",
                "x-kubernetes-group-version-kind": {
                    "group": "",
                    "kind": "PodProxyOptions",
                    "version": "v1"
                }
            },
            "post": {
                "consumes": [
                    "*/*"
                ],
                "description": "connect POST requests to proxy of Pod",
                "operationId": "connectCoreV1PostNamespacedPodProxy",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "schemes": [
                    "https"
                ],
                "tags": [
                    "core_v1"
                ],
                "x-kubernetes-action": "connect",
                "x-kubernetes-group-version-kind": {
                    "group": "",
                    "kind": "PodProxyOptions",
                    "version": "v1"
                }
            },
            "put": {
                "consumes": [
                    "*/*"
                ],
                "description": "connect PUT requests to proxy of Pod",
                "operationId": "connectCoreV1PutNamespacedPodProxy",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "schemes": [
                    "https"
                ],
                "tags": [
                    "core_v1"
                ],
                "x-kubernetes-action": "connect",
                "x-kubernetes-group-version-kind": {
                    "group": "",
                    "kind": "PodProxyOptions",
                    "version": "v1"
                }
            }
        },
        "/api/v1/namespaces/{namespace}/pods/{name}/proxy/{path}": {
            "delete": {
                "consumes": [
                    "*/*"
                ],
                "description": "connect DELETE requests to proxy of Pod",
                "operationId": "connectCoreV1DeleteNamespacedPodProxyWithPath",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "schemes": [
                    "https"
                ],
                "tags": [
                    "core_v1"
                ],
                "x-kubernetes-action": "connect",
                "x-kubernetes-group-version-kind": {
                    "group": "",
                    "kind": "PodProxyOptions",
                    "version": "v1"
                }
            },
            "get": {
                "consumes": [
                    "*/*"
                ],
                "description": "connect GET requests to proxy of Pod",
                "operationId": "connectCoreV1GetNamespacedPodProxyWithPath",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "schemes": [
                    "https"
                ],
                "tags": [
                    "core_v1"
                ],
                "x-kubernetes-action": "connect",
                "x-kubernetes-group-version-kind": {
                    "group": "",
                    "kind": "PodProxyOptions",
                    "version": "v1"
                }
            },
            "head": {
                "consumes": [
                    "*/*"
                ],
                "description": "connect HEAD requests to proxy of Pod",
                "operationId": "connectCoreV1HeadNamespacedPodProxyWithPath",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "schemes": [
                    "https"
                ],
                "tags": [
                    "core_v1"
                ],
                "x-kubernetes-action": "connect",
                "x-kubernetes-group-version-kind": {
                    "group": "",
                    "kind": "PodProxyOptions",
                    "version": "v1"
                }
            },
            "options": {
                "consumes": [
                    "*/*"
                ],
                "description": "connect OPTIONS requests to proxy of Pod",
                "operationId": "connectCoreV1OptionsNamespacedPodProxyWithPath",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "schemes": [
                    "https"
                ],
                "tags": [
                    "core_v1"
                ],
                "x-kubernetes-action": "connect",
                "x-kubernetes-group-version-kind": {
                    "group": "",
                    "kind": "PodProxyOptions",
                    "version": "v1"
                }
            },
            "parameters": [
                {
                    "description": "name of the PodProxyOptions",
                    "in": "path",
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "object name and auth scope, such as for teams and projects",
                    "in": "path",
                    "name": "namespace",
                    "required": true,
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "path to the resource",
                    "in": "path",
                    "name": "path",
                    "required": true,
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "Path is the URL path to use for the current proxy request to pod.",
                    "in": "query",
                    "name": "path",
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "id of k8s cluster",
                    "name": "clusterid",
                    "in": "query"
                }
            ],
            "patch": {
                "consumes": [
                    "*/*"
                ],
                "description": "connect PATCH requests to proxy of Pod",
                "operationId": "connectCoreV1PatchNamespacedPodProxyWithPath",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "schemes": [
                    "https"
                ],
                "tags": [
                    "core_v1"
                ],
                "x-kubernetes-action": "connect",
                "x-kubernetes-group-version-kind": {
                    "group": "",
                    "kind": "PodProxyOptions",
                    "version": "v1"
                }
            },
            "post": {
                "consumes": [
                    "*/*"
                ],
                "description": "connect POST requests to proxy of Pod",
                "operationId": "connectCoreV1PostNamespacedPodProxyWithPath",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "schemes": [
                    "https"
                ],
                "tags": [
                    "core_v1"
                ],
                "x-kubernetes-action": "connect",
                "x-kubernetes-group-version-kind": {
                    "group": "",
                    "kind": "PodProxyOptions",
                    "version": "v1"
                }
            },
            "put": {
                "consumes": [
                    "*/*"
                ],
                "description": "connect PUT requests to proxy of Pod",
                "operationId": "connectCoreV1PutNamespacedPodProxyWithPath",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "schemes": [
                    "https"
                ],
                "tags": [
                    "core_v1"
                ],
                "x-kubernetes-action": "connect",
                "x-kubernetes-group-version-kind": {
                    "group": "",
                    "kind": "PodProxyOptions",
                    "version": "v1"
                }
            }
        },
        "/api/v1/namespaces/{namespace}/pods/{name}/status": {
            "get": {
                "consumes": [
                    "*/*"
                ],
                "description": "read status of the specified Pod",
                "operationId": "readCoreV1NamespacedPodStatus",
                "produces": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.api.core.v1.Pod"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "schemes": [
                    "https"
                ],
                "tags": [
                    "core_v1"
                ],
                "x-kubernetes-action": "get",
                "x-kubernetes-group-version-kind": {
                    "group": "",
                    "kind": "Pod",
                    "version": "v1"
                }
            },
            "parameters": [
                {
                    "description": "name of the Pod",
                    "in": "path",
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "object name and auth scope, such as for teams and projects",
                    "in": "path",
                    "name": "namespace",
                    "required": true,
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "If 'true', then the output is pretty printed.",
                    "in": "query",
                    "name": "pretty",
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "id of k8s cluster",
                    "name": "clusterid",
                    "in": "query"
                }
            ],
            "patch": {
                "consumes": [
                    "application/json-patch+json",
                    "application/merge-patch+json",
                    "application/strategic-merge-patch+json"
                ],
                "description": "partially update status of the specified Pod",
                "operationId": "patchCoreV1NamespacedPodStatus",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
                        }
                    },
                    {
                        "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
                        "in": "query",
                        "name": "dryRun",
                        "type": "string",
                        "uniqueItems": true
                    }
                ],
                "produces": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.api.core.v1.Pod"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "schemes": [
                    "https"
                ],
                "tags": [
                    "core_v1"
                ],
                "x-kubernetes-action": "patch",
                "x-kubernetes-group-version-kind": {
                    "group": "",
                    "kind": "Pod",
                    "version": "v1"
                }
            },
            "put": {
                "consumes": [
                    "*/*"
                ],
                "description": "replace status of the specified Pod",
                "operationId": "replaceCoreV1NamespacedPodStatus",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/io.k8s.api.core.v1.Pod"
                        }
                    },
                    {
                        "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
                        "in": "query",
                        "name": "dryRun",
                        "type": "string",
                        "uniqueItems": true
                    }
                ],
                "produces": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.api.core.v1.Pod"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.api.core.v1.Pod"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "schemes": [
                    "https"
                ],
                "tags": [
                    "core_v1"
                ],
                "x-kubernetes-action": "put",
                "x-kubernetes-group-version-kind": {
                    "group": "",
                    "kind": "Pod",
                    "version": "v1"
                }
            }
        },
        "/api/v1/pods": {
            "get": {
                "consumes": [
                    "*/*"
                ],
                "description": "list or watch objects of kind Pod",
                "operationId": "listCoreV1PodForAllNamespaces",
                "produces": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf",
                    "application/json;stream=watch",
                    "application/vnd.kubernetes.protobuf;stream=watch"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.api.core.v1.PodList"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "schemes": [
                    "https"
                ],
                "tags": [
                    "core_v1"
                ],
                "x-kubernetes-action": "list",
                "x-kubernetes-group-version-kind": {
                    "group": "",
                    "kind": "Pod",
                    "version": "v1"
                }
            },
            "parameters": [
                {
                    "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
                    "in": "query",
                    "name": "continue",
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
                    "in": "query",
                    "name": "fieldSelector",
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "If true, partially initialized resources are included in the response.",
                    "in": "query",
                    "name": "includeUninitialized",
                    "type": "boolean",
                    "uniqueItems": true
                },
                {
                    "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
                    "in": "query",
                    "name": "labelSelector",
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
                    "in": "query",
                    "name": "limit",
                    "type": "integer",
                    "uniqueItems": true
                },
                {
                    "description": "If 'true', then the output is pretty printed.",
                    "in": "query",
                    "name": "pretty",
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
                    "in": "query",
                    "name": "resourceVersion",
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
                    "in": "query",
                    "name": "timeoutSeconds",
                    "type": "integer",
                    "uniqueItems": true
                },
                {
                    "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                    "in": "query",
                    "name": "watch",
                    "type": "boolean",
                    "uniqueItems": true
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "id of k8s cluster",
                    "name": "clusterid",
                    "in": "query"
                }
            ]
        },
        "/api/v1/watch/namespaces/{namespace}/pods": {
            "get": {
                "consumes": [
                    "*/*"
                ],
                "description": "watch individual changes to a list of Pod. deprecated: use the 'watch' parameter with a list operation instead.",
                "operationId": "watchCoreV1NamespacedPodList",
                "produces": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf",
                    "application/json;stream=watch",
                    "application/vnd.kubernetes.protobuf;stream=watch"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "schemes": [
                    "https"
                ],
                "tags": [
                    "core_v1"
                ],
                "x-kubernetes-action": "watchlist",
                "x-kubernetes-group-version-kind": {
                    "group": "",
                    "kind": "Pod",
                    "version": "v1"
                }
            },
            "parameters": [
                {
                    "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
                    "in": "query",
                    "name": "continue",
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
                    "in": "query",
                    "name": "fieldSelector",
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "If true, partially initialized resources are included in the response.",
                    "in": "query",
                    "name": "includeUninitialized",
                    "type": "boolean",
                    "uniqueItems": true
                },
                {
                    "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
                    "in": "query",
                    "name": "labelSelector",
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
                    "in": "query",
                    "name": "limit",
                    "type": "integer",
                    "uniqueItems": true
                },
                {
                    "description": "object name and auth scope, such as for teams and projects",
                    "in": "path",
                    "name": "namespace",
                    "required": true,
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "If 'true', then the output is pretty printed.",
                    "in": "query",
                    "name": "pretty",
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
                    "in": "query",
                    "name": "resourceVersion",
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
                    "in": "query",
                    "name": "timeoutSeconds",
                    "type": "integer",
                    "uniqueItems": true
                },
                {
                    "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                    "in": "query",
                    "name": "watch",
                    "type": "boolean",
                    "uniqueItems": true
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "id of k8s cluster",
                    "name": "clusterid",
                    "in": "query"
                }
            ]
        },
        "/api/v1/watch/namespaces/{namespace}/pods/{name}": {
            "get": {
                "consumes": [
                    "*/*"
                ],
                "description": "watch changes to an object of kind Pod. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
                "operationId": "watchCoreV1NamespacedPod",
                "produces": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf",
                    "application/json;stream=watch",
                    "application/vnd.kubernetes.protobuf;stream=watch"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "schemes": [
                    "https"
                ],
                "tags": [
                    "core_v1"
                ],
                "x-kubernetes-action": "watch",
                "x-kubernetes-group-version-kind": {
                    "group": "",
                    "kind": "Pod",
                    "version": "v1"
                }
            },
            "parameters": [
                {
                    "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
                    "in": "query",
                    "name": "continue",
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
                    "in": "query",
                    "name": "fieldSelector",
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "If true, partially initialized resources are included in the response.",
                    "in": "query",
                    "name": "includeUninitialized",
                    "type": "boolean",
                    "uniqueItems": true
                },
                {
                    "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
                    "in": "query",
                    "name": "labelSelector",
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
                    "in": "query",
                    "name": "limit",
                    "type": "integer",
                    "uniqueItems": true
                },
                {
                    "description": "name of the Pod",
                    "in": "path",
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "object name and auth scope, such as for teams and projects",
                    "in": "path",
                    "name": "namespace",
                    "required": true,
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "If 'true', then the output is pretty printed.",
                    "in": "query",
                    "name": "pretty",
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
                    "in": "query",
                    "name": "resourceVersion",
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
                    "in": "query",
                    "name": "timeoutSeconds",
                    "type": "integer",
                    "uniqueItems": true
                },
                {
                    "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                    "in": "query",
                    "name": "watch",
                    "type": "boolean",
                    "uniqueItems": true
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "id of k8s cluster",
                    "name": "clusterid",
                    "in": "query"
                }
            ]
        },
        "/api/v1/watch/pods": {
            "get": {
                "consumes": [
                    "*/*"
                ],
                "description": "watch individual changes to a list of Pod. deprecated: use the 'watch' parameter with a list operation instead.",
                "operationId": "watchCoreV1PodListForAllNamespaces",
                "produces": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf",
                    "application/json;stream=watch",
                    "application/vnd.kubernetes.protobuf;stream=watch"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "schemes": [
                    "https"
                ],
                "tags": [
                    "core_v1"
                ],
                "x-kubernetes-action": "watchlist",
                "x-kubernetes-group-version-kind": {
                    "group": "",
                    "kind": "Pod",
                    "version": "v1"
                }
            },
            "parameters": [
                {
                    "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
                    "in": "query",
                    "name": "continue",
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
                    "in": "query",
                    "name": "fieldSelector",
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "If true, partially initialized resources are included in the response.",
                    "in": "query",
                    "name": "includeUninitialized",
                    "type": "boolean",
                    "uniqueItems": true
                },
                {
                    "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
                    "in": "query",
                    "name": "labelSelector",
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
                    "in": "query",
                    "name": "limit",
                    "type": "integer",
                    "uniqueItems": true
                },
                {
                    "description": "If 'true', then the output is pretty printed.",
                    "in": "query",
                    "name": "pretty",
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
                    "in": "query",
                    "name": "resourceVersion",
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
                    "in": "query",
                    "name": "timeoutSeconds",
                    "type": "integer",
                    "uniqueItems": true
                },
                {
                    "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                    "in": "query",
                    "name": "watch",
                    "type": "boolean",
                    "uniqueItems": true
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "id of k8s cluster",
                    "name": "clusterid",
                    "in": "query"
                }
            ]
        },
        "/api/v3/clusters": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "get all available k8s clusters",
                "operationId": "",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/com.luckincoffee.cloud.pkg.api.v1.Clusters"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": [
                    "core"
                ]
            }
        },
        "/apis/extensions/v1beta1/podsecuritypolicies": {
            "delete": {
                "consumes": [
                    "*/*"
                ],
                "description": "delete collection of PodSecurityPolicy",
                "operationId": "deleteExtensionsV1beta1CollectionPodSecurityPolicy",
                "parameters": [
                    {
                        "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
                        "in": "query",
                        "name": "continue",
                        "type": "string",
                        "uniqueItems": true
                    },
                    {
                        "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
                        "in": "query",
                        "name": "fieldSelector",
                        "type": "string",
                        "uniqueItems": true
                    },
                    {
                        "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
                        "in": "query",
                        "name": "labelSelector",
                        "type": "string",
                        "uniqueItems": true
                    },
                    {
                        "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
                        "in": "query",
                        "name": "limit",
                        "type": "integer",
                        "uniqueItems": true
                    },
                    {
                        "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
                        "in": "query",
                        "name": "resourceVersion",
                        "type": "string",
                        "uniqueItems": true
                    },
                    {
                        "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
                        "in": "query",
                        "name": "timeoutSeconds",
                        "type": "integer",
                        "uniqueItems": true
                    },
                    {
                        "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                        "in": "query",
                        "name": "watch",
                        "type": "boolean",
                        "uniqueItems": true
                    }
                ],
                "produces": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "schemes": [
                    "https"
                ],
                "tags": [
                    "extensions_v1beta1"
                ],
                "x-kubernetes-action": "deletecollection",
                "x-kubernetes-group-version-kind": {
                    "group": "extensions",
                    "kind": "PodSecurityPolicy",
                    "version": "v1beta1"
                }
            },
            "get": {
                "consumes": [
                    "*/*"
                ],
                "description": "list or watch objects of kind PodSecurityPolicy",
                "operationId": "listExtensionsV1beta1PodSecurityPolicy",
                "parameters": [
                    {
                        "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
                        "in": "query",
                        "name": "continue",
                        "type": "string",
                        "uniqueItems": true
                    },
                    {
                        "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
                        "in": "query",
                        "name": "fieldSelector",
                        "type": "string",
                        "uniqueItems": true
                    },
                    {
                        "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
                        "in": "query",
                        "name": "labelSelector",
                        "type": "string",
                        "uniqueItems": true
                    },
                    {
                        "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
                        "in": "query",
                        "name": "limit",
                        "type": "integer",
                        "uniqueItems": true
                    },
                    {
                        "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
                        "in": "query",
                        "name": "resourceVersion",
                        "type": "string",
                        "uniqueItems": true
                    },
                    {
                        "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
                        "in": "query",
                        "name": "timeoutSeconds",
                        "type": "integer",
                        "uniqueItems": true
                    },
                    {
                        "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                        "in": "query",
                        "name": "watch",
                        "type": "boolean",
                        "uniqueItems": true
                    }
                ],
                "produces": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf",
                    "application/json;stream=watch",
                    "application/vnd.kubernetes.protobuf;stream=watch"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.PodSecurityPolicyList"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "schemes": [
                    "https"
                ],
                "tags": [
                    "extensions_v1beta1"
                ],
                "x-kubernetes-action": "list",
                "x-kubernetes-group-version-kind": {
                    "group": "extensions",
                    "kind": "PodSecurityPolicy",
                    "version": "v1beta1"
                }
            },
            "parameters": [
                {
                    "description": "If true, partially initialized resources are included in the response.",
                    "in": "query",
                    "name": "includeUninitialized",
                    "type": "boolean",
                    "uniqueItems": true
                },
                {
                    "description": "If 'true', then the output is pretty printed.",
                    "in": "query",
                    "name": "pretty",
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "id of k8s cluster",
                    "name": "clusterid",
                    "in": "query"
                }
            ],
            "post": {
                "consumes": [
                    "*/*"
                ],
                "description": "create a PodSecurityPolicy",
                "operationId": "createExtensionsV1beta1PodSecurityPolicy",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.PodSecurityPolicy"
                        }
                    },
                    {
                        "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
                        "in": "query",
                        "name": "dryRun",
                        "type": "string",
                        "uniqueItems": true
                    }
                ],
                "produces": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.PodSecurityPolicy"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.PodSecurityPolicy"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.PodSecurityPolicy"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "schemes": [
                    "https"
                ],
                "tags": [
                    "extensions_v1beta1"
                ],
                "x-kubernetes-action": "post",
                "x-kubernetes-group-version-kind": {
                    "group": "extensions",
                    "kind": "PodSecurityPolicy",
                    "version": "v1beta1"
                }
            }
        },
        "/apis/extensions/v1beta1/podsecuritypolicies/{name}": {
            "delete": {
                "consumes": [
                    "*/*"
                ],
                "description": "delete a PodSecurityPolicy",
                "operationId": "deleteExtensionsV1beta1PodSecurityPolicy",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
                        }
                    },
                    {
                        "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
                        "in": "query",
                        "name": "dryRun",
                        "type": "string",
                        "uniqueItems": true
                    },
                    {
                        "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
                        "in": "query",
                        "name": "gracePeriodSeconds",
                        "type": "integer",
                        "uniqueItems": true
                    },
                    {
                        "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
                        "in": "query",
                        "name": "orphanDependents",
                        "type": "boolean",
                        "uniqueItems": true
                    },
                    {
                        "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                        "in": "query",
                        "name": "propagationPolicy",
                        "type": "string",
                        "uniqueItems": true
                    }
                ],
                "produces": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "schemes": [
                    "https"
                ],
                "tags": [
                    "extensions_v1beta1"
                ],
                "x-kubernetes-action": "delete",
                "x-kubernetes-group-version-kind": {
                    "group": "extensions",
                    "kind": "PodSecurityPolicy",
                    "version": "v1beta1"
                }
            },
            "get": {
                "consumes": [
                    "*/*"
                ],
                "description": "read the specified PodSecurityPolicy",
                "operationId": "readExtensionsV1beta1PodSecurityPolicy",
                "parameters": [
                    {
                        "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'.",
                        "in": "query",
                        "name": "exact",
                        "type": "boolean",
                        "uniqueItems": true
                    },
                    {
                        "description": "Should this value be exported.  Export strips fields that a user can not specify.",
                        "in": "query",
                        "name": "export",
                        "type": "boolean",
                        "uniqueItems": true
                    }
                ],
                "produces": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.PodSecurityPolicy"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "schemes": [
                    "https"
                ],
                "tags": [
                    "extensions_v1beta1"
                ],
                "x-kubernetes-action": "get",
                "x-kubernetes-group-version-kind": {
                    "group": "extensions",
                    "kind": "PodSecurityPolicy",
                    "version": "v1beta1"
                }
            },
            "parameters": [
                {
                    "description": "name of the PodSecurityPolicy",
                    "in": "path",
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "If 'true', then the output is pretty printed.",
                    "in": "query",
                    "name": "pretty",
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "id of k8s cluster",
                    "name": "clusterid",
                    "in": "query"
                }
            ],
            "patch": {
                "consumes": [
                    "application/json-patch+json",
                    "application/merge-patch+json",
                    "application/strategic-merge-patch+json"
                ],
                "description": "partially update the specified PodSecurityPolicy",
                "operationId": "patchExtensionsV1beta1PodSecurityPolicy",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
                        }
                    },
                    {
                        "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
                        "in": "query",
                        "name": "dryRun",
                        "type": "string",
                        "uniqueItems": true
                    }
                ],
                "produces": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.PodSecurityPolicy"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "schemes": [
                    "https"
                ],
                "tags": [
                    "extensions_v1beta1"
                ],
                "x-kubernetes-action": "patch",
                "x-kubernetes-group-version-kind": {
                    "group": "extensions",
                    "kind": "PodSecurityPolicy",
                    "version": "v1beta1"
                }
            },
            "put": {
                "consumes": [
                    "*/*"
                ],
                "description": "replace the specified PodSecurityPolicy",
                "operationId": "replaceExtensionsV1beta1PodSecurityPolicy",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.PodSecurityPolicy"
                        }
                    },
                    {
                        "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
                        "in": "query",
                        "name": "dryRun",
                        "type": "string",
                        "uniqueItems": true
                    }
                ],
                "produces": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.PodSecurityPolicy"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.PodSecurityPolicy"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "schemes": [
                    "https"
                ],
                "tags": [
                    "extensions_v1beta1"
                ],
                "x-kubernetes-action": "put",
                "x-kubernetes-group-version-kind": {
                    "group": "extensions",
                    "kind": "PodSecurityPolicy",
                    "version": "v1beta1"
                }
            }
        },
        "/apis/extensions/v1beta1/watch/podsecuritypolicies": {
            "get": {
                "consumes": [
                    "*/*"
                ],
                "description": "watch individual changes to a list of PodSecurityPolicy. deprecated: use the 'watch' parameter with a list operation instead.",
                "operationId": "watchExtensionsV1beta1PodSecurityPolicyList",
                "produces": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf",
                    "application/json;stream=watch",
                    "application/vnd.kubernetes.protobuf;stream=watch"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "schemes": [
                    "https"
                ],
                "tags": [
                    "extensions_v1beta1"
                ],
                "x-kubernetes-action": "watchlist",
                "x-kubernetes-group-version-kind": {
                    "group": "extensions",
                    "kind": "PodSecurityPolicy",
                    "version": "v1beta1"
                }
            },
            "parameters": [
                {
                    "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
                    "in": "query",
                    "name": "continue",
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
                    "in": "query",
                    "name": "fieldSelector",
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "If true, partially initialized resources are included in the response.",
                    "in": "query",
                    "name": "includeUninitialized",
                    "type": "boolean",
                    "uniqueItems": true
                },
                {
                    "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
                    "in": "query",
                    "name": "labelSelector",
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
                    "in": "query",
                    "name": "limit",
                    "type": "integer",
                    "uniqueItems": true
                },
                {
                    "description": "If 'true', then the output is pretty printed.",
                    "in": "query",
                    "name": "pretty",
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
                    "in": "query",
                    "name": "resourceVersion",
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
                    "in": "query",
                    "name": "timeoutSeconds",
                    "type": "integer",
                    "uniqueItems": true
                },
                {
                    "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                    "in": "query",
                    "name": "watch",
                    "type": "boolean",
                    "uniqueItems": true
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "id of k8s cluster",
                    "name": "clusterid",
                    "in": "query"
                }
            ]
        },
        "/apis/extensions/v1beta1/watch/podsecuritypolicies/{name}": {
            "get": {
                "consumes": [
                    "*/*"
                ],
                "description": "watch changes to an object of kind PodSecurityPolicy. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
                "operationId": "watchExtensionsV1beta1PodSecurityPolicy",
                "produces": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf",
                    "application/json;stream=watch",
                    "application/vnd.kubernetes.protobuf;stream=watch"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "schemes": [
                    "https"
                ],
                "tags": [
                    "extensions_v1beta1"
                ],
                "x-kubernetes-action": "watch",
                "x-kubernetes-group-version-kind": {
                    "group": "extensions",
                    "kind": "PodSecurityPolicy",
                    "version": "v1beta1"
                }
            },
            "parameters": [
                {
                    "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
                    "in": "query",
                    "name": "continue",
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
                    "in": "query",
                    "name": "fieldSelector",
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "If true, partially initialized resources are included in the response.",
                    "in": "query",
                    "name": "includeUninitialized",
                    "type": "boolean",
                    "uniqueItems": true
                },
                {
                    "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
                    "in": "query",
                    "name": "labelSelector",
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
                    "in": "query",
                    "name": "limit",
                    "type": "integer",
                    "uniqueItems": true
                },
                {
                    "description": "name of the PodSecurityPolicy",
                    "in": "path",
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "If 'true', then the output is pretty printed.",
                    "in": "query",
                    "name": "pretty",
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
                    "in": "query",
                    "name": "resourceVersion",
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
                    "in": "query",
                    "name": "timeoutSeconds",
                    "type": "integer",
                    "uniqueItems": true
                },
                {
                    "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                    "in": "query",
                    "name": "watch",
                    "type": "boolean",
                    "uniqueItems": true
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "id of k8s cluster",
                    "name": "clusterid",
                    "in": "query"
                }
            ]
        },
        "/apis/policy/v1beta1/podsecuritypolicies": {
            "delete": {
                "consumes": [
                    "*/*"
                ],
                "description": "delete collection of PodSecurityPolicy",
                "operationId": "deletePolicyV1beta1CollectionPodSecurityPolicy",
                "parameters": [
                    {
                        "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
                        "in": "query",
                        "name": "continue",
                        "type": "string",
                        "uniqueItems": true
                    },
                    {
                        "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
                        "in": "query",
                        "name": "fieldSelector",
                        "type": "string",
                        "uniqueItems": true
                    },
                    {
                        "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
                        "in": "query",
                        "name": "labelSelector",
                        "type": "string",
                        "uniqueItems": true
                    },
                    {
                        "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
                        "in": "query",
                        "name": "limit",
                        "type": "integer",
                        "uniqueItems": true
                    },
                    {
                        "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
                        "in": "query",
                        "name": "resourceVersion",
                        "type": "string",
                        "uniqueItems": true
                    },
                    {
                        "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
                        "in": "query",
                        "name": "timeoutSeconds",
                        "type": "integer",
                        "uniqueItems": true
                    },
                    {
                        "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                        "in": "query",
                        "name": "watch",
                        "type": "boolean",
                        "uniqueItems": true
                    }
                ],
                "produces": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "schemes": [
                    "https"
                ],
                "tags": [
                    "policy_v1beta1"
                ],
                "x-kubernetes-action": "deletecollection",
                "x-kubernetes-group-version-kind": {
                    "group": "policy",
                    "kind": "PodSecurityPolicy",
                    "version": "v1beta1"
                }
            },
            "get": {
                "consumes": [
                    "*/*"
                ],
                "description": "list or watch objects of kind PodSecurityPolicy",
                "operationId": "listPolicyV1beta1PodSecurityPolicy",
                "parameters": [
                    {
                        "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
                        "in": "query",
                        "name": "continue",
                        "type": "string",
                        "uniqueItems": true
                    },
                    {
                        "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
                        "in": "query",
                        "name": "fieldSelector",
                        "type": "string",
                        "uniqueItems": true
                    },
                    {
                        "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
                        "in": "query",
                        "name": "labelSelector",
                        "type": "string",
                        "uniqueItems": true
                    },
                    {
                        "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
                        "in": "query",
                        "name": "limit",
                        "type": "integer",
                        "uniqueItems": true
                    },
                    {
                        "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
                        "in": "query",
                        "name": "resourceVersion",
                        "type": "string",
                        "uniqueItems": true
                    },
                    {
                        "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
                        "in": "query",
                        "name": "timeoutSeconds",
                        "type": "integer",
                        "uniqueItems": true
                    },
                    {
                        "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                        "in": "query",
                        "name": "watch",
                        "type": "boolean",
                        "uniqueItems": true
                    }
                ],
                "produces": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf",
                    "application/json;stream=watch",
                    "application/vnd.kubernetes.protobuf;stream=watch"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.api.policy.v1beta1.PodSecurityPolicyList"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "schemes": [
                    "https"
                ],
                "tags": [
                    "policy_v1beta1"
                ],
                "x-kubernetes-action": "list",
                "x-kubernetes-group-version-kind": {
                    "group": "policy",
                    "kind": "PodSecurityPolicy",
                    "version": "v1beta1"
                }
            },
            "parameters": [
                {
                    "description": "If true, partially initialized resources are included in the response.",
                    "in": "query",
                    "name": "includeUninitialized",
                    "type": "boolean",
                    "uniqueItems": true
                },
                {
                    "description": "If 'true', then the output is pretty printed.",
                    "in": "query",
                    "name": "pretty",
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "id of k8s cluster",
                    "name": "clusterid",
                    "in": "query"
                }
            ],
            "post": {
                "consumes": [
                    "*/*"
                ],
                "description": "create a PodSecurityPolicy",
                "operationId": "createPolicyV1beta1PodSecurityPolicy",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/io.k8s.api.policy.v1beta1.PodSecurityPolicy"
                        }
                    },
                    {
                        "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
                        "in": "query",
                        "name": "dryRun",
                        "type": "string",
                        "uniqueItems": true
                    }
                ],
                "produces": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.api.policy.v1beta1.PodSecurityPolicy"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.api.policy.v1beta1.PodSecurityPolicy"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.api.policy.v1beta1.PodSecurityPolicy"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "schemes": [
                    "https"
                ],
                "tags": [
                    "policy_v1beta1"
                ],
                "x-kubernetes-action": "post",
                "x-kubernetes-group-version-kind": {
                    "group": "policy",
                    "kind": "PodSecurityPolicy",
                    "version": "v1beta1"
                }
            }
        },
        "/apis/policy/v1beta1/podsecuritypolicies/{name}": {
            "delete": {
                "consumes": [
                    "*/*"
                ],
                "description": "delete a PodSecurityPolicy",
                "operationId": "deletePolicyV1beta1PodSecurityPolicy",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
                        }
                    },
                    {
                        "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
                        "in": "query",
                        "name": "dryRun",
                        "type": "string",
                        "uniqueItems": true
                    },
                    {
                        "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
                        "in": "query",
                        "name": "gracePeriodSeconds",
                        "type": "integer",
                        "uniqueItems": true
                    },
                    {
                        "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
                        "in": "query",
                        "name": "orphanDependents",
                        "type": "boolean",
                        "uniqueItems": true
                    },
                    {
                        "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                        "in": "query",
                        "name": "propagationPolicy",
                        "type": "string",
                        "uniqueItems": true
                    }
                ],
                "produces": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "schemes": [
                    "https"
                ],
                "tags": [
                    "policy_v1beta1"
                ],
                "x-kubernetes-action": "delete",
                "x-kubernetes-group-version-kind": {
                    "group": "policy",
                    "kind": "PodSecurityPolicy",
                    "version": "v1beta1"
                }
            },
            "get": {
                "consumes": [
                    "*/*"
                ],
                "description": "read the specified PodSecurityPolicy",
                "operationId": "readPolicyV1beta1PodSecurityPolicy",
                "parameters": [
                    {
                        "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'.",
                        "in": "query",
                        "name": "exact",
                        "type": "boolean",
                        "uniqueItems": true
                    },
                    {
                        "description": "Should this value be exported.  Export strips fields that a user can not specify.",
                        "in": "query",
                        "name": "export",
                        "type": "boolean",
                        "uniqueItems": true
                    }
                ],
                "produces": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.api.policy.v1beta1.PodSecurityPolicy"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "schemes": [
                    "https"
                ],
                "tags": [
                    "policy_v1beta1"
                ],
                "x-kubernetes-action": "get",
                "x-kubernetes-group-version-kind": {
                    "group": "policy",
                    "kind": "PodSecurityPolicy",
                    "version": "v1beta1"
                }
            },
            "parameters": [
                {
                    "description": "name of the PodSecurityPolicy",
                    "in": "path",
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "If 'true', then the output is pretty printed.",
                    "in": "query",
                    "name": "pretty",
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "id of k8s cluster",
                    "name": "clusterid",
                    "in": "query"
                }
            ],
            "patch": {
                "consumes": [
                    "application/json-patch+json",
                    "application/merge-patch+json",
                    "application/strategic-merge-patch+json"
                ],
                "description": "partially update the specified PodSecurityPolicy",
                "operationId": "patchPolicyV1beta1PodSecurityPolicy",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
                        }
                    },
                    {
                        "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
                        "in": "query",
                        "name": "dryRun",
                        "type": "string",
                        "uniqueItems": true
                    }
                ],
                "produces": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.api.policy.v1beta1.PodSecurityPolicy"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "schemes": [
                    "https"
                ],
                "tags": [
                    "policy_v1beta1"
                ],
                "x-kubernetes-action": "patch",
                "x-kubernetes-group-version-kind": {
                    "group": "policy",
                    "kind": "PodSecurityPolicy",
                    "version": "v1beta1"
                }
            },
            "put": {
                "consumes": [
                    "*/*"
                ],
                "description": "replace the specified PodSecurityPolicy",
                "operationId": "replacePolicyV1beta1PodSecurityPolicy",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/io.k8s.api.policy.v1beta1.PodSecurityPolicy"
                        }
                    },
                    {
                        "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
                        "in": "query",
                        "name": "dryRun",
                        "type": "string",
                        "uniqueItems": true
                    }
                ],
                "produces": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.api.policy.v1beta1.PodSecurityPolicy"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.api.policy.v1beta1.PodSecurityPolicy"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "schemes": [
                    "https"
                ],
                "tags": [
                    "policy_v1beta1"
                ],
                "x-kubernetes-action": "put",
                "x-kubernetes-group-version-kind": {
                    "group": "policy",
                    "kind": "PodSecurityPolicy",
                    "version": "v1beta1"
                }
            }
        },
        "/apis/policy/v1beta1/watch/podsecuritypolicies": {
            "get": {
                "consumes": [
                    "*/*"
                ],
                "description": "watch individual changes to a list of PodSecurityPolicy. deprecated: use the 'watch' parameter with a list operation instead.",
                "operationId": "watchPolicyV1beta1PodSecurityPolicyList",
                "produces": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf",
                    "application/json;stream=watch",
                    "application/vnd.kubernetes.protobuf;stream=watch"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "schemes": [
                    "https"
                ],
                "tags": [
                    "policy_v1beta1"
                ],
                "x-kubernetes-action": "watchlist",
                "x-kubernetes-group-version-kind": {
                    "group": "policy",
                    "kind": "PodSecurityPolicy",
                    "version": "v1beta1"
                }
            },
            "parameters": [
                {
                    "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
                    "in": "query",
                    "name": "continue",
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
                    "in": "query",
                    "name": "fieldSelector",
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "If true, partially initialized resources are included in the response.",
                    "in": "query",
                    "name": "includeUninitialized",
                    "type": "boolean",
                    "uniqueItems": true
                },
                {
                    "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
                    "in": "query",
                    "name": "labelSelector",
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
                    "in": "query",
                    "name": "limit",
                    "type": "integer",
                    "uniqueItems": true
                },
                {
                    "description": "If 'true', then the output is pretty printed.",
                    "in": "query",
                    "name": "pretty",
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
                    "in": "query",
                    "name": "resourceVersion",
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
                    "in": "query",
                    "name": "timeoutSeconds",
                    "type": "integer",
                    "uniqueItems": true
                },
                {
                    "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                    "in": "query",
                    "name": "watch",
                    "type": "boolean",
                    "uniqueItems": true
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "id of k8s cluster",
                    "name": "clusterid",
                    "in": "query"
                }
            ]
        },
        "/apis/policy/v1beta1/watch/podsecuritypolicies/{name}": {
            "get": {
                "consumes": [
                    "*/*"
                ],
                "description": "watch changes to an object of kind PodSecurityPolicy. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
                "operationId": "watchPolicyV1beta1PodSecurityPolicy",
                "produces": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf",
                    "application/json;stream=watch",
                    "application/vnd.kubernetes.protobuf;stream=watch"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "schemes": [
                    "https"
                ],
                "tags": [
                    "policy_v1beta1"
                ],
                "x-kubernetes-action": "watch",
                "x-kubernetes-group-version-kind": {
                    "group": "policy",
                    "kind": "PodSecurityPolicy",
                    "version": "v1beta1"
                }
            },
            "parameters": [
                {
                    "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
                    "in": "query",
                    "name": "continue",
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
                    "in": "query",
                    "name": "fieldSelector",
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "If true, partially initialized resources are included in the response.",
                    "in": "query",
                    "name": "includeUninitialized",
                    "type": "boolean",
                    "uniqueItems": true
                },
                {
                    "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
                    "in": "query",
                    "name": "labelSelector",
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
                    "in": "query",
                    "name": "limit",
                    "type": "integer",
                    "uniqueItems": true
                },
                {
                    "description": "name of the PodSecurityPolicy",
                    "in": "path",
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "If 'true', then the output is pretty printed.",
                    "in": "query",
                    "name": "pretty",
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
                    "in": "query",
                    "name": "resourceVersion",
                    "type": "string",
                    "uniqueItems": true
                },
                {
                    "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
                    "in": "query",
                    "name": "timeoutSeconds",
                    "type": "integer",
                    "uniqueItems": true
                },
                {
                    "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                    "in": "query",
                    "name": "watch",
                    "type": "boolean",
                    "uniqueItems": true
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "id of k8s cluster",
                    "name": "clusterid",
                    "in": "query"
                }
            ]
        }
    },
    "definitions": {
        "com.luckincoffee.cloud.pkg.api.v1.Cluster": {
            "description": "Cluster is the k8s clusters that are available",
            "properties": {
                "id": {
                    "description": "ID is the id of the k8s cluster",
                    "type": "string"
                },
                "name": {
                    "description": "NAME is the name of the k8s cluster",
                    "type": "string"
                },
                "provider": {
                    "description": "Provider is the k8s cluster provider",
                    "type": "string"
                }
            }
        },
        "com.luckincoffee.cloud.pkg.api.v1.Clusters": {
            "description": "Clusters List the k8s clusters that are available",
            "properties": {
                "apiVersion": {
                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values.",
                    "type": "string"
                },
                "items": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#definitions/com.luckincoffee.cloud.pkg.api.v1.Cluster"
                    }
                }
            }
        },
        "io.k8s.api.core.v1.AWSElasticBlockStoreVolumeSource": {
            "description": "Represents a Persistent Disk resource in AWS.\n\nAn AWS EBS disk must exist before mounting to a container. The disk must also be in the same AWS zone as the kubelet. An AWS EBS disk can only be mounted as read/write once. AWS EBS volumes support ownership management and SELinux relabeling.",
            "properties": {
                "fsType": {
                    "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
                    "type": "string"
                },
                "partition": {
                    "description": "The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).",
                    "format": "int32",
                    "type": "integer"
                },
                "readOnly": {
                    "description": "Specify \"true\" to force and set the ReadOnly property in VolumeMounts to \"true\". If omitted, the default is \"false\". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
                    "type": "boolean"
                },
                "volumeID": {
                    "description": "Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
                    "type": "string"
                }
            },
            "required": [
                "volumeID"
            ]
        },
        "io.k8s.api.core.v1.Affinity": {
            "description": "Affinity is a group of affinity scheduling rules.",
            "properties": {
                "nodeAffinity": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.NodeAffinity",
                    "description": "Describes node affinity scheduling rules for the pod."
                },
                "podAffinity": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.PodAffinity",
                    "description": "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s))."
                },
                "podAntiAffinity": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.PodAntiAffinity",
                    "description": "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s))."
                }
            }
        },
        "io.k8s.api.core.v1.AzureDiskVolumeSource": {
            "description": "AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.",
            "properties": {
                "cachingMode": {
                    "description": "Host Caching mode: None, Read Only, Read Write.",
                    "type": "string"
                },
                "diskName": {
                    "description": "The Name of the data disk in the blob storage",
                    "type": "string"
                },
                "diskURI": {
                    "description": "The URI the data disk in the blob storage",
                    "type": "string"
                },
                "fsType": {
                    "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                    "type": "string"
                },
                "kind": {
                    "description": "Expected values Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared",
                    "type": "string"
                },
                "readOnly": {
                    "description": "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
                    "type": "boolean"
                }
            },
            "required": [
                "diskName",
                "diskURI"
            ]
        },
        "io.k8s.api.core.v1.AzureFileVolumeSource": {
            "description": "AzureFile represents an Azure File Service mount on the host and bind mount to the pod.",
            "properties": {
                "readOnly": {
                    "description": "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
                    "type": "boolean"
                },
                "secretName": {
                    "description": "the name of secret that contains Azure Storage Account Name and Key",
                    "type": "string"
                },
                "shareName": {
                    "description": "Share Name",
                    "type": "string"
                }
            },
            "required": [
                "secretName",
                "shareName"
            ]
        },
        "io.k8s.api.core.v1.Binding": {
            "description": "Binding ties one object to another; for example, a pod is bound to a node by a scheduler. Deprecated in 1.7, please use the bindings subresource of pods instead.",
            "properties": {
                "apiVersion": {
                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
                    "type": "string"
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                    "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata"
                },
                "target": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference",
                    "description": "The target object that you want to bind to the standard object."
                }
            },
            "required": [
                "target"
            ],
            "x-kubernetes-group-version-kind": [
                {
                    "group": "",
                    "kind": "Binding",
                    "version": "v1"
                }
            ]
        },
        "io.k8s.api.core.v1.Capabilities": {
            "description": "Adds and removes POSIX capabilities from running containers.",
            "properties": {
                "add": {
                    "description": "Added capabilities",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "drop": {
                    "description": "Removed capabilities",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            }
        },
        "io.k8s.api.core.v1.CephFSVolumeSource": {
            "description": "Represents a Ceph Filesystem mount that lasts the lifetime of a pod Cephfs volumes do not support ownership management or SELinux relabeling.",
            "properties": {
                "monitors": {
                    "description": "Required: Monitors is a collection of Ceph monitors More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "path": {
                    "description": "Optional: Used as the mounted root, rather than the full Ceph tree, default is /",
                    "type": "string"
                },
                "readOnly": {
                    "description": "Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                    "type": "boolean"
                },
                "secretFile": {
                    "description": "Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                    "type": "string"
                },
                "secretRef": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference",
                    "description": "Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it"
                },
                "user": {
                    "description": "Optional: User is the rados user name, default is admin More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                    "type": "string"
                }
            },
            "required": [
                "monitors"
            ]
        },
        "io.k8s.api.core.v1.CinderVolumeSource": {
            "description": "Represents a cinder volume resource in Openstack. A Cinder volume must exist before mounting to a container. The volume must also be in the same region as the kubelet. Cinder volumes support ownership management and SELinux relabeling.",
            "properties": {
                "fsType": {
                    "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md",
                    "type": "string"
                },
                "readOnly": {
                    "description": "Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md",
                    "type": "boolean"
                },
                "secretRef": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference",
                    "description": "Optional: points to a secret object containing parameters used to connect to OpenStack."
                },
                "volumeID": {
                    "description": "volume id used to identify the volume in cinder More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md",
                    "type": "string"
                }
            },
            "required": [
                "volumeID"
            ]
        },
        "io.k8s.api.core.v1.ConfigMapEnvSource": {
            "description": "ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.\n\nThe contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.",
            "properties": {
                "name": {
                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                    "type": "string"
                },
                "optional": {
                    "description": "Specify whether the ConfigMap must be defined",
                    "type": "boolean"
                }
            }
        },
        "io.k8s.api.core.v1.ConfigMapKeySelector": {
            "description": "Selects a key from a ConfigMap.",
            "properties": {
                "key": {
                    "description": "The key to select.",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                    "type": "string"
                },
                "optional": {
                    "description": "Specify whether the ConfigMap or it's key must be defined",
                    "type": "boolean"
                }
            },
            "required": [
                "key"
            ]
        },
        "io.k8s.api.core.v1.ConfigMapProjection": {
            "description": "Adapts a ConfigMap into a projected volume.\n\nThe contents of the target ConfigMap's Data field will be presented in a projected volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. Note that this is identical to a configmap volume source without the default mode.",
            "properties": {
                "items": {
                    "description": "If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.core.v1.KeyToPath"
                    },
                    "type": "array"
                },
                "name": {
                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                    "type": "string"
                },
                "optional": {
                    "description": "Specify whether the ConfigMap or it's keys must be defined",
                    "type": "boolean"
                }
            }
        },
        "io.k8s.api.core.v1.ConfigMapVolumeSource": {
            "description": "Adapts a ConfigMap into a volume.\n\nThe contents of the target ConfigMap's Data field will be presented in a volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. ConfigMap volumes support ownership management and SELinux relabeling.",
            "properties": {
                "defaultMode": {
                    "description": "Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                    "format": "int32",
                    "type": "integer"
                },
                "items": {
                    "description": "If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.core.v1.KeyToPath"
                    },
                    "type": "array"
                },
                "name": {
                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                    "type": "string"
                },
                "optional": {
                    "description": "Specify whether the ConfigMap or it's keys must be defined",
                    "type": "boolean"
                }
            }
        },
        "io.k8s.api.core.v1.Container": {
            "description": "A single application container that you want to run within a pod.",
            "properties": {
                "args": {
                    "description": "Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "command": {
                    "description": "Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "env": {
                    "description": "List of environment variables to set in the container. Cannot be updated.",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.core.v1.EnvVar"
                    },
                    "type": "array",
                    "x-kubernetes-patch-merge-key": "name",
                    "x-kubernetes-patch-strategy": "merge"
                },
                "envFrom": {
                    "description": "List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.core.v1.EnvFromSource"
                    },
                    "type": "array"
                },
                "image": {
                    "description": "Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.",
                    "type": "string"
                },
                "imagePullPolicy": {
                    "description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images",
                    "type": "string"
                },
                "lifecycle": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.Lifecycle",
                    "description": "Actions that the management system should take in response to container lifecycle events. Cannot be updated."
                },
                "livenessProbe": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.Probe",
                    "description": "Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                },
                "name": {
                    "description": "Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.",
                    "type": "string"
                },
                "ports": {
                    "description": "List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default \"0.0.0.0\" address inside a container will be accessible from the network. Cannot be updated.",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.core.v1.ContainerPort"
                    },
                    "type": "array",
                    "x-kubernetes-list-map-keys": [
                        "containerPort",
                        "protocol"
                    ],
                    "x-kubernetes-list-type": "map",
                    "x-kubernetes-patch-merge-key": "containerPort",
                    "x-kubernetes-patch-strategy": "merge"
                },
                "readinessProbe": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.Probe",
                    "description": "Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                },
                "resources": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements",
                    "description": "Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/"
                },
                "securityContext": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.SecurityContext",
                    "description": "Security options the pod should run with. More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/"
                },
                "stdin": {
                    "description": "Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.",
                    "type": "boolean"
                },
                "stdinOnce": {
                    "description": "Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false",
                    "type": "boolean"
                },
                "terminationMessagePath": {
                    "description": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.",
                    "type": "string"
                },
                "terminationMessagePolicy": {
                    "description": "Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.",
                    "type": "string"
                },
                "tty": {
                    "description": "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.",
                    "type": "boolean"
                },
                "volumeDevices": {
                    "description": "volumeDevices is the list of block devices to be used by the container. This is a beta feature.",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.core.v1.VolumeDevice"
                    },
                    "type": "array",
                    "x-kubernetes-patch-merge-key": "devicePath",
                    "x-kubernetes-patch-strategy": "merge"
                },
                "volumeMounts": {
                    "description": "Pod volumes to mount into the container's filesystem. Cannot be updated.",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.core.v1.VolumeMount"
                    },
                    "type": "array",
                    "x-kubernetes-patch-merge-key": "mountPath",
                    "x-kubernetes-patch-strategy": "merge"
                },
                "workingDir": {
                    "description": "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.",
                    "type": "string"
                }
            },
            "required": [
                "name"
            ]
        },
        "io.k8s.api.core.v1.ContainerPort": {
            "description": "ContainerPort represents a network port in a single container.",
            "properties": {
                "containerPort": {
                    "description": "Number of port to expose on the pod's IP address. This must be a valid port number, 0 \u003c x \u003c 65536.",
                    "format": "int32",
                    "type": "integer"
                },
                "hostIP": {
                    "description": "What host IP to bind the external port to.",
                    "type": "string"
                },
                "hostPort": {
                    "description": "Number of port to expose on the host. If specified, this must be a valid port number, 0 \u003c x \u003c 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.",
                    "format": "int32",
                    "type": "integer"
                },
                "name": {
                    "description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.",
                    "type": "string"
                },
                "protocol": {
                    "description": "Protocol for port. Must be UDP, TCP, or SCTP. Defaults to \"TCP\".",
                    "type": "string"
                }
            },
            "required": [
                "containerPort"
            ]
        },
        "io.k8s.api.core.v1.ContainerState": {
            "description": "ContainerState holds a possible state of container. Only one of its members may be specified. If none of them is specified, the default one is ContainerStateWaiting.",
            "properties": {
                "running": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.ContainerStateRunning",
                    "description": "Details about a running container"
                },
                "terminated": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.ContainerStateTerminated",
                    "description": "Details about a terminated container"
                },
                "waiting": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.ContainerStateWaiting",
                    "description": "Details about a waiting container"
                }
            }
        },
        "io.k8s.api.core.v1.ContainerStateRunning": {
            "description": "ContainerStateRunning is a running state of a container.",
            "properties": {
                "startedAt": {
                    "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
                    "description": "Time at which the container was last (re-)started"
                }
            }
        },
        "io.k8s.api.core.v1.ContainerStateTerminated": {
            "description": "ContainerStateTerminated is a terminated state of a container.",
            "properties": {
                "containerID": {
                    "description": "Container's ID in the format 'docker://\u003ccontainer_id\u003e'",
                    "type": "string"
                },
                "exitCode": {
                    "description": "Exit status from the last termination of the container",
                    "format": "int32",
                    "type": "integer"
                },
                "finishedAt": {
                    "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
                    "description": "Time at which the container last terminated"
                },
                "message": {
                    "description": "Message regarding the last termination of the container",
                    "type": "string"
                },
                "reason": {
                    "description": "(brief) reason from the last termination of the container",
                    "type": "string"
                },
                "signal": {
                    "description": "Signal from the last termination of the container",
                    "format": "int32",
                    "type": "integer"
                },
                "startedAt": {
                    "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
                    "description": "Time at which previous execution of the container started"
                }
            },
            "required": [
                "exitCode"
            ]
        },
        "io.k8s.api.core.v1.ContainerStateWaiting": {
            "description": "ContainerStateWaiting is a waiting state of a container.",
            "properties": {
                "message": {
                    "description": "Message regarding why the container is not yet running.",
                    "type": "string"
                },
                "reason": {
                    "description": "(brief) reason the container is not yet running.",
                    "type": "string"
                }
            }
        },
        "io.k8s.api.core.v1.ContainerStatus": {
            "description": "ContainerStatus contains details for the current status of this container.",
            "properties": {
                "containerID": {
                    "description": "Container's ID in the format 'docker://\u003ccontainer_id\u003e'.",
                    "type": "string"
                },
                "image": {
                    "description": "The image the container is running. More info: https://kubernetes.io/docs/concepts/containers/images",
                    "type": "string"
                },
                "imageID": {
                    "description": "ImageID of the container's image.",
                    "type": "string"
                },
                "lastState": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.ContainerState",
                    "description": "Details about the container's last termination condition."
                },
                "name": {
                    "description": "This must be a DNS_LABEL. Each container in a pod must have a unique name. Cannot be updated.",
                    "type": "string"
                },
                "ready": {
                    "description": "Specifies whether the container has passed its readiness probe.",
                    "type": "boolean"
                },
                "restartCount": {
                    "description": "The number of times the container has been restarted, currently based on the number of dead containers that have not yet been removed. Note that this is calculated from dead containers. But those containers are subject to garbage collection. This value will get capped at 5 by GC.",
                    "format": "int32",
                    "type": "integer"
                },
                "state": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.ContainerState",
                    "description": "Details about the container's current condition."
                }
            },
            "required": [
                "name",
                "ready",
                "restartCount",
                "image",
                "imageID"
            ]
        },
        "io.k8s.api.core.v1.DownwardAPIProjection": {
            "description": "Represents downward API info for projecting into a projected volume. Note that this is identical to a downwardAPI volume source without the default mode.",
            "properties": {
                "items": {
                    "description": "Items is a list of DownwardAPIVolume file",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.core.v1.DownwardAPIVolumeFile"
                    },
                    "type": "array"
                }
            }
        },
        "io.k8s.api.core.v1.DownwardAPIVolumeFile": {
            "description": "DownwardAPIVolumeFile represents information to create the file containing the pod field",
            "properties": {
                "fieldRef": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.ObjectFieldSelector",
                    "description": "Required: Selects a field of the pod: only annotations, labels, name and namespace are supported."
                },
                "mode": {
                    "description": "Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                    "format": "int32",
                    "type": "integer"
                },
                "path": {
                    "description": "Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'",
                    "type": "string"
                },
                "resourceFieldRef": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.ResourceFieldSelector",
                    "description": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported."
                }
            },
            "required": [
                "path"
            ]
        },
        "io.k8s.api.core.v1.DownwardAPIVolumeSource": {
            "description": "DownwardAPIVolumeSource represents a volume containing downward API info. Downward API volumes support ownership management and SELinux relabeling.",
            "properties": {
                "defaultMode": {
                    "description": "Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                    "format": "int32",
                    "type": "integer"
                },
                "items": {
                    "description": "Items is a list of downward API volume file",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.core.v1.DownwardAPIVolumeFile"
                    },
                    "type": "array"
                }
            }
        },
        "io.k8s.api.core.v1.EmptyDirVolumeSource": {
            "description": "Represents an empty directory for a pod. Empty directory volumes support ownership management and SELinux relabeling.",
            "properties": {
                "medium": {
                    "description": "What type of storage medium should back this directory. The default is \"\" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
                    "type": "string"
                },
                "sizeLimit": {
                    "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity",
                    "description": "Total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir"
                }
            }
        },
        "io.k8s.api.core.v1.EnvFromSource": {
            "description": "EnvFromSource represents the source of a set of ConfigMaps",
            "properties": {
                "configMapRef": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.ConfigMapEnvSource",
                    "description": "The ConfigMap to select from"
                },
                "prefix": {
                    "description": "An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.",
                    "type": "string"
                },
                "secretRef": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.SecretEnvSource",
                    "description": "The Secret to select from"
                }
            }
        },
        "io.k8s.api.core.v1.EnvVar": {
            "description": "EnvVar represents an environment variable present in a Container.",
            "properties": {
                "name": {
                    "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                    "type": "string"
                },
                "value": {
                    "description": "Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\".",
                    "type": "string"
                },
                "valueFrom": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.EnvVarSource",
                    "description": "Source for the environment variable's value. Cannot be used if value is not empty."
                }
            },
            "required": [
                "name"
            ]
        },
        "io.k8s.api.core.v1.EnvVarSource": {
            "description": "EnvVarSource represents a source for the value of an EnvVar.",
            "properties": {
                "configMapKeyRef": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.ConfigMapKeySelector",
                    "description": "Selects a key of a ConfigMap."
                },
                "fieldRef": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.ObjectFieldSelector",
                    "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP."
                },
                "resourceFieldRef": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.ResourceFieldSelector",
                    "description": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported."
                },
                "secretKeyRef": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector",
                    "description": "Selects a key of a secret in the pod's namespace"
                }
            }
        },
        "io.k8s.api.core.v1.ExecAction": {
            "description": "ExecAction describes a \"run in container\" action.",
            "properties": {
                "command": {
                    "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            }
        },
        "io.k8s.api.core.v1.FCVolumeSource": {
            "description": "Represents a Fibre Channel volume. Fibre Channel volumes can only be mounted as read/write once. Fibre Channel volumes support ownership management and SELinux relabeling.",
            "properties": {
                "fsType": {
                    "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                    "type": "string"
                },
                "lun": {
                    "description": "Optional: FC target lun number",
                    "format": "int32",
                    "type": "integer"
                },
                "readOnly": {
                    "description": "Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
                    "type": "boolean"
                },
                "targetWWNs": {
                    "description": "Optional: FC target worldwide names (WWNs)",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "wwids": {
                    "description": "Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            }
        },
        "io.k8s.api.core.v1.FlexVolumeSource": {
            "description": "FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.",
            "properties": {
                "driver": {
                    "description": "Driver is the name of the driver to use for this volume.",
                    "type": "string"
                },
                "fsType": {
                    "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script.",
                    "type": "string"
                },
                "options": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Optional: Extra command options if any.",
                    "type": "object"
                },
                "readOnly": {
                    "description": "Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
                    "type": "boolean"
                },
                "secretRef": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference",
                    "description": "Optional: SecretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts."
                }
            },
            "required": [
                "driver"
            ]
        },
        "io.k8s.api.core.v1.FlockerVolumeSource": {
            "description": "Represents a Flocker volume mounted by the Flocker agent. One and only one of datasetName and datasetUUID should be set. Flocker volumes do not support ownership management or SELinux relabeling.",
            "properties": {
                "datasetName": {
                    "description": "Name of the dataset stored as metadata -\u003e name on the dataset for Flocker should be considered as deprecated",
                    "type": "string"
                },
                "datasetUUID": {
                    "description": "UUID of the dataset. This is unique identifier of a Flocker dataset",
                    "type": "string"
                }
            }
        },
        "io.k8s.api.core.v1.GCEPersistentDiskVolumeSource": {
            "description": "Represents a Persistent Disk resource in Google Compute Engine.\n\nA GCE PD must exist before mounting to a container. The disk must also be in the same GCE project and zone as the kubelet. A GCE PD can only be mounted as read/write once or read-only many times. GCE PDs support ownership management and SELinux relabeling.",
            "properties": {
                "fsType": {
                    "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                    "type": "string"
                },
                "partition": {
                    "description": "The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                    "format": "int32",
                    "type": "integer"
                },
                "pdName": {
                    "description": "Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                    "type": "string"
                },
                "readOnly": {
                    "description": "ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                    "type": "boolean"
                }
            },
            "required": [
                "pdName"
            ]
        },
        "io.k8s.api.core.v1.GitRepoVolumeSource": {
            "description": "Represents a volume that is populated with the contents of a git repository. Git repo volumes do not support ownership management. Git repo volumes support SELinux relabeling.\n\nDEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.",
            "properties": {
                "directory": {
                    "description": "Target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.",
                    "type": "string"
                },
                "repository": {
                    "description": "Repository URL",
                    "type": "string"
                },
                "revision": {
                    "description": "Commit hash for the specified revision.",
                    "type": "string"
                }
            },
            "required": [
                "repository"
            ]
        },
        "io.k8s.api.core.v1.GlusterfsVolumeSource": {
            "description": "Represents a Glusterfs mount that lasts the lifetime of a pod. Glusterfs volumes do not support ownership management or SELinux relabeling.",
            "properties": {
                "endpoints": {
                    "description": "EndpointsName is the endpoint name that details Glusterfs topology. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod",
                    "type": "string"
                },
                "path": {
                    "description": "Path is the Glusterfs volume path. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod",
                    "type": "string"
                },
                "readOnly": {
                    "description": "ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod",
                    "type": "boolean"
                }
            },
            "required": [
                "endpoints",
                "path"
            ]
        },
        "io.k8s.api.core.v1.HTTPGetAction": {
            "description": "HTTPGetAction describes an action based on HTTP Get requests.",
            "properties": {
                "host": {
                    "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                    "type": "string"
                },
                "httpHeaders": {
                    "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.core.v1.HTTPHeader"
                    },
                    "type": "array"
                },
                "path": {
                    "description": "Path to access on the HTTP server.",
                    "type": "string"
                },
                "port": {
                    "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString",
                    "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                },
                "scheme": {
                    "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
                    "type": "string"
                }
            },
            "required": [
                "port"
            ]
        },
        "io.k8s.api.core.v1.HTTPHeader": {
            "description": "HTTPHeader describes a custom header to be used in HTTP probes",
            "properties": {
                "name": {
                    "description": "The header field name",
                    "type": "string"
                },
                "value": {
                    "description": "The header field value",
                    "type": "string"
                }
            },
            "required": [
                "name",
                "value"
            ]
        },
        "io.k8s.api.core.v1.Handler": {
            "description": "Handler defines a specific action that should be taken",
            "properties": {
                "exec": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.ExecAction",
                    "description": "One and only one of the following should be specified. Exec specifies the action to take."
                },
                "httpGet": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.HTTPGetAction",
                    "description": "HTTPGet specifies the http request to perform."
                },
                "tcpSocket": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.TCPSocketAction",
                    "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported"
                }
            }
        },
        "io.k8s.api.core.v1.HostAlias": {
            "description": "HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the pod's hosts file.",
            "properties": {
                "hostnames": {
                    "description": "Hostnames for the above IP address.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "ip": {
                    "description": "IP address of the host file entry.",
                    "type": "string"
                }
            }
        },
        "io.k8s.api.core.v1.HostPathVolumeSource": {
            "description": "Represents a host path mapped into a pod. Host path volumes do not support ownership management or SELinux relabeling.",
            "properties": {
                "path": {
                    "description": "Path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
                    "type": "string"
                },
                "type": {
                    "description": "Type for HostPath Volume Defaults to \"\" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
                    "type": "string"
                }
            },
            "required": [
                "path"
            ]
        },
        "io.k8s.api.core.v1.ISCSIVolumeSource": {
            "description": "Represents an ISCSI disk. ISCSI volumes can only be mounted as read/write once. ISCSI volumes support ownership management and SELinux relabeling.",
            "properties": {
                "chapAuthDiscovery": {
                    "description": "whether support iSCSI Discovery CHAP authentication",
                    "type": "boolean"
                },
                "chapAuthSession": {
                    "description": "whether support iSCSI Session CHAP authentication",
                    "type": "boolean"
                },
                "fsType": {
                    "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi",
                    "type": "string"
                },
                "initiatorName": {
                    "description": "Custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface \u003ctarget portal\u003e:\u003cvolume name\u003e will be created for the connection.",
                    "type": "string"
                },
                "iqn": {
                    "description": "Target iSCSI Qualified Name.",
                    "type": "string"
                },
                "iscsiInterface": {
                    "description": "iSCSI Interface Name that uses an iSCSI transport. Defaults to 'default' (tcp).",
                    "type": "string"
                },
                "lun": {
                    "description": "iSCSI Target Lun number.",
                    "format": "int32",
                    "type": "integer"
                },
                "portals": {
                    "description": "iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "readOnly": {
                    "description": "ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.",
                    "type": "boolean"
                },
                "secretRef": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference",
                    "description": "CHAP Secret for iSCSI target and initiator authentication"
                },
                "targetPortal": {
                    "description": "iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).",
                    "type": "string"
                }
            },
            "required": [
                "targetPortal",
                "iqn",
                "lun"
            ]
        },
        "io.k8s.api.core.v1.KeyToPath": {
            "description": "Maps a string key to a path within a volume.",
            "properties": {
                "key": {
                    "description": "The key to project.",
                    "type": "string"
                },
                "mode": {
                    "description": "Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                    "format": "int32",
                    "type": "integer"
                },
                "path": {
                    "description": "The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
                    "type": "string"
                }
            },
            "required": [
                "key",
                "path"
            ]
        },
        "io.k8s.api.core.v1.Lifecycle": {
            "description": "Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.",
            "properties": {
                "postStart": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.Handler",
                    "description": "PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks"
                },
                "preStop": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.Handler",
                    "description": "PreStop is called immediately before a container is terminated. The container is terminated after the handler completes. The reason for termination is passed to the handler. Regardless of the outcome of the handler, the container is eventually terminated. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks"
                }
            }
        },
        "io.k8s.api.core.v1.LocalObjectReference": {
            "description": "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.",
            "properties": {
                "name": {
                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                    "type": "string"
                }
            }
        },
        "io.k8s.api.core.v1.NFSVolumeSource": {
            "description": "Represents an NFS mount that lasts the lifetime of a pod. NFS volumes do not support ownership management or SELinux relabeling.",
            "properties": {
                "path": {
                    "description": "Path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                    "type": "string"
                },
                "readOnly": {
                    "description": "ReadOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                    "type": "boolean"
                },
                "server": {
                    "description": "Server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                    "type": "string"
                }
            },
            "required": [
                "server",
                "path"
            ]
        },
        "io.k8s.api.core.v1.NodeAffinity": {
            "description": "Node affinity is a group of node affinity scheduling rules.",
            "properties": {
                "preferredDuringSchedulingIgnoredDuringExecution": {
                    "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.core.v1.PreferredSchedulingTerm"
                    },
                    "type": "array"
                },
                "requiredDuringSchedulingIgnoredDuringExecution": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.NodeSelector",
                    "description": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node."
                }
            }
        },
        "io.k8s.api.core.v1.NodeSelector": {
            "description": "A node selector represents the union of the results of one or more label queries over a set of nodes; that is, it represents the OR of the selectors represented by the node selector terms.",
            "properties": {
                "nodeSelectorTerms": {
                    "description": "Required. A list of node selector terms. The terms are ORed.",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.core.v1.NodeSelectorTerm"
                    },
                    "type": "array"
                }
            },
            "required": [
                "nodeSelectorTerms"
            ]
        },
        "io.k8s.api.core.v1.NodeSelectorRequirement": {
            "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
            "properties": {
                "key": {
                    "description": "The label key that the selector applies to.",
                    "type": "string"
                },
                "operator": {
                    "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                    "type": "string"
                },
                "values": {
                    "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "key",
                "operator"
            ]
        },
        "io.k8s.api.core.v1.NodeSelectorTerm": {
            "description": "A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.",
            "properties": {
                "matchExpressions": {
                    "description": "A list of node selector requirements by node's labels.",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.core.v1.NodeSelectorRequirement"
                    },
                    "type": "array"
                },
                "matchFields": {
                    "description": "A list of node selector requirements by node's fields.",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.core.v1.NodeSelectorRequirement"
                    },
                    "type": "array"
                }
            }
        },
        "io.k8s.api.core.v1.ObjectFieldSelector": {
            "description": "ObjectFieldSelector selects an APIVersioned field of an object.",
            "properties": {
                "apiVersion": {
                    "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                    "type": "string"
                },
                "fieldPath": {
                    "description": "Path of the field to select in the specified API version.",
                    "type": "string"
                }
            },
            "required": [
                "fieldPath"
            ]
        },
        "io.k8s.api.core.v1.ObjectReference": {
            "description": "ObjectReference contains enough information to let you inspect or modify the referred object.",
            "properties": {
                "apiVersion": {
                    "description": "API version of the referent.",
                    "type": "string"
                },
                "fieldPath": {
                    "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object.",
                    "type": "string"
                },
                "kind": {
                    "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                    "type": "string"
                },
                "namespace": {
                    "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                    "type": "string"
                },
                "resourceVersion": {
                    "description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency",
                    "type": "string"
                },
                "uid": {
                    "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                    "type": "string"
                }
            }
        },
        "io.k8s.api.core.v1.PersistentVolumeClaimVolumeSource": {
            "description": "PersistentVolumeClaimVolumeSource references the user's PVC in the same namespace. This volume finds the bound PV and mounts that volume for the pod. A PersistentVolumeClaimVolumeSource is, essentially, a wrapper around another type of volume that is owned by someone else (the system).",
            "properties": {
                "claimName": {
                    "description": "ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
                    "type": "string"
                },
                "readOnly": {
                    "description": "Will force the ReadOnly setting in VolumeMounts. Default false.",
                    "type": "boolean"
                }
            },
            "required": [
                "claimName"
            ]
        },
        "io.k8s.api.core.v1.PhotonPersistentDiskVolumeSource": {
            "description": "Represents a Photon Controller persistent disk resource.",
            "properties": {
                "fsType": {
                    "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                    "type": "string"
                },
                "pdID": {
                    "description": "ID that identifies Photon Controller persistent disk",
                    "type": "string"
                }
            },
            "required": [
                "pdID"
            ]
        },
        "io.k8s.api.core.v1.Pod": {
            "description": "Pod is a collection of containers that can run on a host. This resource is created by clients and scheduled onto hosts.",
            "properties": {
                "apiVersion": {
                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
                    "type": "string"
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                    "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata"
                },
                "spec": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.PodSpec",
                    "description": "Specification of the desired behavior of the pod. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status"
                },
                "status": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.PodStatus",
                    "description": "Most recently observed status of the pod. This data may not be up to date. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status"
                }
            },
            "x-kubernetes-group-version-kind": [
                {
                    "group": "",
                    "kind": "Pod",
                    "version": "v1"
                }
            ]
        },
        "io.k8s.api.core.v1.PodAffinity": {
            "description": "Pod affinity is a group of inter pod affinity scheduling rules.",
            "properties": {
                "preferredDuringSchedulingIgnoredDuringExecution": {
                    "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.core.v1.WeightedPodAffinityTerm"
                    },
                    "type": "array"
                },
                "requiredDuringSchedulingIgnoredDuringExecution": {
                    "description": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.core.v1.PodAffinityTerm"
                    },
                    "type": "array"
                }
            }
        },
        "io.k8s.api.core.v1.PodAffinityTerm": {
            "description": "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key \u003ctopologyKey\u003e matches that of any node on which a pod of the set of pods is running",
            "properties": {
                "labelSelector": {
                    "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector",
                    "description": "A label query over a set of resources, in this case pods."
                },
                "namespaces": {
                    "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\"",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "topologyKey": {
                    "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                    "type": "string"
                }
            },
            "required": [
                "topologyKey"
            ]
        },
        "io.k8s.api.core.v1.PodAntiAffinity": {
            "description": "Pod anti affinity is a group of inter pod anti affinity scheduling rules.",
            "properties": {
                "preferredDuringSchedulingIgnoredDuringExecution": {
                    "description": "The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.core.v1.WeightedPodAffinityTerm"
                    },
                    "type": "array"
                },
                "requiredDuringSchedulingIgnoredDuringExecution": {
                    "description": "If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.core.v1.PodAffinityTerm"
                    },
                    "type": "array"
                }
            }
        },
        "io.k8s.api.core.v1.PodCondition": {
            "description": "PodCondition contains details for the current condition of this pod.",
            "properties": {
                "lastProbeTime": {
                    "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
                    "description": "Last time we probed the condition."
                },
                "lastTransitionTime": {
                    "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
                    "description": "Last time the condition transitioned from one status to another."
                },
                "message": {
                    "description": "Human-readable message indicating details about last transition.",
                    "type": "string"
                },
                "reason": {
                    "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
                    "type": "string"
                },
                "status": {
                    "description": "Status is the status of the condition. Can be True, False, Unknown. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions",
                    "type": "string"
                },
                "type": {
                    "description": "Type is the type of the condition. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions",
                    "type": "string"
                }
            },
            "required": [
                "type",
                "status"
            ]
        },
        "io.k8s.api.core.v1.PodDNSConfig": {
            "description": "PodDNSConfig defines the DNS parameters of a pod in addition to those generated from DNSPolicy.",
            "properties": {
                "nameservers": {
                    "description": "A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "options": {
                    "description": "A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy.",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.core.v1.PodDNSConfigOption"
                    },
                    "type": "array"
                },
                "searches": {
                    "description": "A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            }
        },
        "io.k8s.api.core.v1.PodDNSConfigOption": {
            "description": "PodDNSConfigOption defines DNS resolver options of a pod.",
            "properties": {
                "name": {
                    "description": "Required.",
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "io.k8s.api.core.v1.PodList": {
            "description": "PodList is a list of Pods.",
            "properties": {
                "apiVersion": {
                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
                    "type": "string"
                },
                "items": {
                    "description": "List of pods. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.core.v1.Pod"
                    },
                    "type": "array"
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
                    "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
                }
            },
            "required": [
                "items"
            ],
            "x-kubernetes-group-version-kind": [
                {
                    "group": "",
                    "kind": "PodList",
                    "version": "v1"
                }
            ]
        },
        "io.k8s.api.core.v1.PodReadinessGate": {
            "description": "PodReadinessGate contains the reference to a pod condition",
            "properties": {
                "conditionType": {
                    "description": "ConditionType refers to a condition in the pod's condition list with matching type.",
                    "type": "string"
                }
            },
            "required": [
                "conditionType"
            ]
        },
        "io.k8s.api.core.v1.PodSecurityContext": {
            "description": "PodSecurityContext holds pod-level security attributes and common container settings. Some fields are also present in container.securityContext.  Field values of container.securityContext take precedence over field values of PodSecurityContext.",
            "properties": {
                "fsGroup": {
                    "description": "A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod:\n\n1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw----\n\nIf unset, the Kubelet will not modify the ownership and permissions of any volume.",
                    "format": "int64",
                    "type": "integer"
                },
                "runAsGroup": {
                    "description": "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
                    "format": "int64",
                    "type": "integer"
                },
                "runAsNonRoot": {
                    "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                    "type": "boolean"
                },
                "runAsUser": {
                    "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
                    "format": "int64",
                    "type": "integer"
                },
                "seLinuxOptions": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.SELinuxOptions",
                    "description": "The SELinux context to be applied to all containers. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container."
                },
                "supplementalGroups": {
                    "description": "A list of groups applied to the first process run in each container, in addition to the container's primary GID.  If unspecified, no groups will be added to any container.",
                    "items": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "type": "array"
                },
                "sysctls": {
                    "description": "Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported sysctls (by the container runtime) might fail to launch.",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.core.v1.Sysctl"
                    },
                    "type": "array"
                }
            }
        },
        "io.k8s.api.core.v1.PodSpec": {
            "description": "PodSpec is a description of a pod.",
            "properties": {
                "activeDeadlineSeconds": {
                    "description": "Optional duration in seconds the pod may be active on the node relative to StartTime before the system will actively try to mark it failed and kill associated containers. Value must be a positive integer.",
                    "format": "int64",
                    "type": "integer"
                },
                "affinity": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.Affinity",
                    "description": "If specified, the pod's scheduling constraints"
                },
                "automountServiceAccountToken": {
                    "description": "AutomountServiceAccountToken indicates whether a service account token should be automatically mounted.",
                    "type": "boolean"
                },
                "containers": {
                    "description": "List of containers belonging to the pod. Containers cannot currently be added or removed. There must be at least one container in a Pod. Cannot be updated.",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.core.v1.Container"
                    },
                    "type": "array",
                    "x-kubernetes-patch-merge-key": "name",
                    "x-kubernetes-patch-strategy": "merge"
                },
                "dnsConfig": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.PodDNSConfig",
                    "description": "Specifies the DNS parameters of a pod. Parameters specified here will be merged to the generated DNS configuration based on DNSPolicy."
                },
                "dnsPolicy": {
                    "description": "Set DNS policy for the pod. Defaults to \"ClusterFirst\". Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'. DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy. To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'.",
                    "type": "string"
                },
                "enableServiceLinks": {
                    "description": "EnableServiceLinks indicates whether information about services should be injected into pod's environment variables, matching the syntax of Docker links.",
                    "type": "boolean"
                },
                "hostAliases": {
                    "description": "HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts file if specified. This is only valid for non-hostNetwork pods.",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.core.v1.HostAlias"
                    },
                    "type": "array",
                    "x-kubernetes-patch-merge-key": "ip",
                    "x-kubernetes-patch-strategy": "merge"
                },
                "hostIPC": {
                    "description": "Use the host's ipc namespace. Optional: Default to false.",
                    "type": "boolean"
                },
                "hostNetwork": {
                    "description": "Host networking requested for this pod. Use the host's network namespace. If this option is set, the ports that will be used must be specified. Default to false.",
                    "type": "boolean"
                },
                "hostPID": {
                    "description": "Use the host's pid namespace. Optional: Default to false.",
                    "type": "boolean"
                },
                "hostname": {
                    "description": "Specifies the hostname of the Pod If not specified, the pod's hostname will be set to a system-defined value.",
                    "type": "string"
                },
                "imagePullSecrets": {
                    "description": "ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec. If specified, these secrets will be passed to individual puller implementations for them to use. For example, in the case of docker, only DockerConfig type secrets are honored. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
                    },
                    "type": "array",
                    "x-kubernetes-patch-merge-key": "name",
                    "x-kubernetes-patch-strategy": "merge"
                },
                "initContainers": {
                    "description": "List of initialization containers belonging to the pod. Init containers are executed in order prior to containers being started. If any init container fails, the pod is considered to have failed and is handled according to its restartPolicy. The name for an init container or normal container must be unique among all containers. Init containers may not have Lifecycle actions, Readiness probes, or Liveness probes. The resourceRequirements of an init container are taken into account during scheduling by finding the highest request/limit for each resource type, and then using the max of of that value or the sum of the normal containers. Limits are applied to init containers in a similar fashion. Init containers cannot currently be added or removed. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.core.v1.Container"
                    },
                    "type": "array",
                    "x-kubernetes-patch-merge-key": "name",
                    "x-kubernetes-patch-strategy": "merge"
                },
                "nodeName": {
                    "description": "NodeName is a request to schedule this pod onto a specific node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements.",
                    "type": "string"
                },
                "nodeSelector": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/",
                    "type": "object"
                },
                "priority": {
                    "description": "The priority value. Various system components use this field to find the priority of the pod. When Priority Admission Controller is enabled, it prevents users from setting this field. The admission controller populates this field from PriorityClassName. The higher the value, the higher the priority.",
                    "format": "int32",
                    "type": "integer"
                },
                "priorityClassName": {
                    "description": "If specified, indicates the pod's priority. \"system-node-critical\" and \"system-cluster-critical\" are two special keywords which indicate the highest priorities with the former being the highest priority. Any other name must be defined by creating a PriorityClass object with that name. If not specified, the pod priority will be default or zero if there is no default.",
                    "type": "string"
                },
                "readinessGates": {
                    "description": "If specified, all readiness gates will be evaluated for pod readiness. A pod is ready when all its containers are ready AND all conditions specified in the readiness gates have status equal to \"True\" More info: https://github.com/kubernetes/community/blob/master/keps/sig-network/0007-pod-ready%2B%2B.md",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.core.v1.PodReadinessGate"
                    },
                    "type": "array"
                },
                "restartPolicy": {
                    "description": "Restart policy for all containers within the pod. One of Always, OnFailure, Never. Default to Always. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy",
                    "type": "string"
                },
                "runtimeClassName": {
                    "description": "RuntimeClassName refers to a RuntimeClass object in the node.k8s.io group, which should be used to run this pod.  If no RuntimeClass resource matches the named class, the pod will not be run. If unset or empty, the \"legacy\" RuntimeClass will be used, which is an implicit class with an empty definition that uses the default runtime handler. More info: https://github.com/kubernetes/community/blob/master/keps/sig-node/0014-runtime-class.md This is an alpha feature and may change in the future.",
                    "type": "string"
                },
                "schedulerName": {
                    "description": "If specified, the pod will be dispatched by specified scheduler. If not specified, the pod will be dispatched by default scheduler.",
                    "type": "string"
                },
                "securityContext": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.PodSecurityContext",
                    "description": "SecurityContext holds pod-level security attributes and common container settings. Optional: Defaults to empty.  See type description for default values of each field."
                },
                "serviceAccount": {
                    "description": "DeprecatedServiceAccount is a depreciated alias for ServiceAccountName. Deprecated: Use serviceAccountName instead.",
                    "type": "string"
                },
                "serviceAccountName": {
                    "description": "ServiceAccountName is the name of the ServiceAccount to use to run this pod. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
                    "type": "string"
                },
                "shareProcessNamespace": {
                    "description": "Share a single process namespace between all of the containers in a pod. When this is set containers will be able to view and signal processes from other containers in the same pod, and the first process in each container will not be assigned PID 1. HostPID and ShareProcessNamespace cannot both be set. Optional: Default to false. This field is beta-level and may be disabled with the PodShareProcessNamespace feature.",
                    "type": "boolean"
                },
                "subdomain": {
                    "description": "If specified, the fully qualified Pod hostname will be \"\u003chostname\u003e.\u003csubdomain\u003e.\u003cpod namespace\u003e.svc.\u003ccluster domain\u003e\". If not specified, the pod will not have a domainname at all.",
                    "type": "string"
                },
                "terminationGracePeriodSeconds": {
                    "description": "Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. Defaults to 30 seconds.",
                    "format": "int64",
                    "type": "integer"
                },
                "tolerations": {
                    "description": "If specified, the pod's tolerations.",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.core.v1.Toleration"
                    },
                    "type": "array"
                },
                "volumes": {
                    "description": "List of volumes that can be mounted by containers belonging to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.core.v1.Volume"
                    },
                    "type": "array",
                    "x-kubernetes-patch-merge-key": "name",
                    "x-kubernetes-patch-strategy": "merge,retainKeys"
                }
            },
            "required": [
                "containers"
            ]
        },
        "io.k8s.api.core.v1.PodStatus": {
            "description": "PodStatus represents information about the status of a pod. Status may trail the actual state of a system, especially if the node that hosts the pod cannot contact the control plane.",
            "properties": {
                "conditions": {
                    "description": "Current service state of pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.core.v1.PodCondition"
                    },
                    "type": "array",
                    "x-kubernetes-patch-merge-key": "type",
                    "x-kubernetes-patch-strategy": "merge"
                },
                "containerStatuses": {
                    "description": "The list has one entry per container in the manifest. Each entry is currently the output of `docker inspect`. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-and-container-status",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.core.v1.ContainerStatus"
                    },
                    "type": "array"
                },
                "hostIP": {
                    "description": "IP address of the host to which the pod is assigned. Empty if not yet scheduled.",
                    "type": "string"
                },
                "initContainerStatuses": {
                    "description": "The list has one entry per init container in the manifest. The most recent successful init container will have ready = true, the most recently started container will have startTime set. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-and-container-status",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.core.v1.ContainerStatus"
                    },
                    "type": "array"
                },
                "message": {
                    "description": "A human readable message indicating details about why the pod is in this condition.",
                    "type": "string"
                },
                "nominatedNodeName": {
                    "description": "nominatedNodeName is set only when this pod preempts other pods on the node, but it cannot be scheduled right away as preemption victims receive their graceful termination periods. This field does not guarantee that the pod will be scheduled on this node. Scheduler may decide to place the pod elsewhere if other nodes become available sooner. Scheduler may also decide to give the resources on this node to a higher priority pod that is created after preemption. As a result, this field may be different than PodSpec.nodeName when the pod is scheduled.",
                    "type": "string"
                },
                "phase": {
                    "description": "The phase of a Pod is a simple, high-level summary of where the Pod is in its lifecycle. The conditions array, the reason and message fields, and the individual container status arrays contain more detail about the pod's status. There are five possible phase values:\n\nPending: The pod has been accepted by the Kubernetes system, but one or more of the container images has not been created. This includes time before being scheduled as well as time spent downloading images over the network, which could take a while. Running: The pod has been bound to a node, and all of the containers have been created. At least one container is still running, or is in the process of starting or restarting. Succeeded: All containers in the pod have terminated in success, and will not be restarted. Failed: All containers in the pod have terminated, and at least one container has terminated in failure. The container either exited with non-zero status or was terminated by the system. Unknown: For some reason the state of the pod could not be obtained, typically due to an error in communicating with the host of the pod.\n\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-phase",
                    "type": "string"
                },
                "podIP": {
                    "description": "IP address allocated to the pod. Routable at least within the cluster. Empty if not yet allocated.",
                    "type": "string"
                },
                "qosClass": {
                    "description": "The Quality of Service (QOS) classification assigned to the pod based on resource requirements See PodQOSClass type for available QOS classes More info: https://git.k8s.io/community/contributors/design-proposals/node/resource-qos.md",
                    "type": "string"
                },
                "reason": {
                    "description": "A brief CamelCase message indicating details about why the pod is in this state. e.g. 'Evicted'",
                    "type": "string"
                },
                "startTime": {
                    "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
                    "description": "RFC 3339 date and time at which the object was acknowledged by the Kubelet. This is before the Kubelet pulled the container image(s) for the pod."
                }
            }
        },
        "io.k8s.api.core.v1.PortworxVolumeSource": {
            "description": "PortworxVolumeSource represents a Portworx volume resource.",
            "properties": {
                "fsType": {
                    "description": "FSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                    "type": "string"
                },
                "readOnly": {
                    "description": "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
                    "type": "boolean"
                },
                "volumeID": {
                    "description": "VolumeID uniquely identifies a Portworx volume",
                    "type": "string"
                }
            },
            "required": [
                "volumeID"
            ]
        },
        "io.k8s.api.core.v1.PreferredSchedulingTerm": {
            "description": "An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).",
            "properties": {
                "preference": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.NodeSelectorTerm",
                    "description": "A node selector term, associated with the corresponding weight."
                },
                "weight": {
                    "description": "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "weight",
                "preference"
            ]
        },
        "io.k8s.api.core.v1.Probe": {
            "description": "Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.",
            "properties": {
                "exec": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.ExecAction",
                    "description": "One and only one of the following should be specified. Exec specifies the action to take."
                },
                "failureThreshold": {
                    "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                    "format": "int32",
                    "type": "integer"
                },
                "httpGet": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.HTTPGetAction",
                    "description": "HTTPGet specifies the http request to perform."
                },
                "initialDelaySeconds": {
                    "description": "Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                    "format": "int32",
                    "type": "integer"
                },
                "periodSeconds": {
                    "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                    "format": "int32",
                    "type": "integer"
                },
                "successThreshold": {
                    "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                    "format": "int32",
                    "type": "integer"
                },
                "tcpSocket": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.TCPSocketAction",
                    "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported"
                },
                "timeoutSeconds": {
                    "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "io.k8s.api.core.v1.ProjectedVolumeSource": {
            "description": "Represents a projected volume source",
            "properties": {
                "defaultMode": {
                    "description": "Mode bits to use on created files by default. Must be a value between 0 and 0777. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                    "format": "int32",
                    "type": "integer"
                },
                "sources": {
                    "description": "list of volume projections",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.core.v1.VolumeProjection"
                    },
                    "type": "array"
                }
            },
            "required": [
                "sources"
            ]
        },
        "io.k8s.api.core.v1.QuobyteVolumeSource": {
            "description": "Represents a Quobyte mount that lasts the lifetime of a pod. Quobyte volumes do not support ownership management or SELinux relabeling.",
            "properties": {
                "group": {
                    "description": "Group to map volume access to Default is no group",
                    "type": "string"
                },
                "readOnly": {
                    "description": "ReadOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.",
                    "type": "boolean"
                },
                "registry": {
                    "description": "Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes",
                    "type": "string"
                },
                "user": {
                    "description": "User to map volume access to Defaults to serivceaccount user",
                    "type": "string"
                },
                "volume": {
                    "description": "Volume is a string that references an already created Quobyte volume by name.",
                    "type": "string"
                }
            },
            "required": [
                "registry",
                "volume"
            ]
        },
        "io.k8s.api.core.v1.RBDVolumeSource": {
            "description": "Represents a Rados Block Device mount that lasts the lifetime of a pod. RBD volumes support ownership management and SELinux relabeling.",
            "properties": {
                "fsType": {
                    "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd",
                    "type": "string"
                },
                "image": {
                    "description": "The rados image name. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                    "type": "string"
                },
                "keyring": {
                    "description": "Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                    "type": "string"
                },
                "monitors": {
                    "description": "A collection of Ceph monitors. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "pool": {
                    "description": "The rados pool name. Default is rbd. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                    "type": "string"
                },
                "readOnly": {
                    "description": "ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                    "type": "boolean"
                },
                "secretRef": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference",
                    "description": "SecretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it"
                },
                "user": {
                    "description": "The rados user name. Default is admin. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                    "type": "string"
                }
            },
            "required": [
                "monitors",
                "image"
            ]
        },
        "io.k8s.api.core.v1.ResourceFieldSelector": {
            "description": "ResourceFieldSelector represents container resources (cpu, memory) and their output format",
            "properties": {
                "containerName": {
                    "description": "Container name: required for volumes, optional for env vars",
                    "type": "string"
                },
                "divisor": {
                    "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity",
                    "description": "Specifies the output format of the exposed resources, defaults to \"1\""
                },
                "resource": {
                    "description": "Required: resource to select",
                    "type": "string"
                }
            },
            "required": [
                "resource"
            ]
        },
        "io.k8s.api.core.v1.ResourceRequirements": {
            "description": "ResourceRequirements describes the compute resource requirements.",
            "properties": {
                "limits": {
                    "additionalProperties": {
                        "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
                    },
                    "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
                    "type": "object"
                },
                "requests": {
                    "additionalProperties": {
                        "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
                    },
                    "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
                    "type": "object"
                }
            }
        },
        "io.k8s.api.core.v1.SELinuxOptions": {
            "description": "SELinuxOptions are the labels to be applied to the container",
            "properties": {
                "level": {
                    "description": "Level is SELinux level label that applies to the container.",
                    "type": "string"
                },
                "role": {
                    "description": "Role is a SELinux role label that applies to the container.",
                    "type": "string"
                },
                "type": {
                    "description": "Type is a SELinux type label that applies to the container.",
                    "type": "string"
                },
                "user": {
                    "description": "User is a SELinux user label that applies to the container.",
                    "type": "string"
                }
            }
        },
        "io.k8s.api.core.v1.ScaleIOVolumeSource": {
            "description": "ScaleIOVolumeSource represents a persistent ScaleIO volume",
            "properties": {
                "fsType": {
                    "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Default is \"xfs\".",
                    "type": "string"
                },
                "gateway": {
                    "description": "The host address of the ScaleIO API Gateway.",
                    "type": "string"
                },
                "protectionDomain": {
                    "description": "The name of the ScaleIO Protection Domain for the configured storage.",
                    "type": "string"
                },
                "readOnly": {
                    "description": "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
                    "type": "boolean"
                },
                "secretRef": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference",
                    "description": "SecretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail."
                },
                "sslEnabled": {
                    "description": "Flag to enable/disable SSL communication with Gateway, default false",
                    "type": "boolean"
                },
                "storageMode": {
                    "description": "Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.",
                    "type": "string"
                },
                "storagePool": {
                    "description": "The ScaleIO Storage Pool associated with the protection domain.",
                    "type": "string"
                },
                "system": {
                    "description": "The name of the storage system as configured in ScaleIO.",
                    "type": "string"
                },
                "volumeName": {
                    "description": "The name of a volume already created in the ScaleIO system that is associated with this volume source.",
                    "type": "string"
                }
            },
            "required": [
                "gateway",
                "system",
                "secretRef"
            ]
        },
        "io.k8s.api.core.v1.SecretEnvSource": {
            "description": "SecretEnvSource selects a Secret to populate the environment variables with.\n\nThe contents of the target Secret's Data field will represent the key-value pairs as environment variables.",
            "properties": {
                "name": {
                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                    "type": "string"
                },
                "optional": {
                    "description": "Specify whether the Secret must be defined",
                    "type": "boolean"
                }
            }
        },
        "io.k8s.api.core.v1.SecretKeySelector": {
            "description": "SecretKeySelector selects a key of a Secret.",
            "properties": {
                "key": {
                    "description": "The key of the secret to select from.  Must be a valid secret key.",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                    "type": "string"
                },
                "optional": {
                    "description": "Specify whether the Secret or it's key must be defined",
                    "type": "boolean"
                }
            },
            "required": [
                "key"
            ]
        },
        "io.k8s.api.core.v1.SecretProjection": {
            "description": "Adapts a secret into a projected volume.\n\nThe contents of the target Secret's Data field will be presented in a projected volume as files using the keys in the Data field as the file names. Note that this is identical to a secret volume source without the default mode.",
            "properties": {
                "items": {
                    "description": "If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.core.v1.KeyToPath"
                    },
                    "type": "array"
                },
                "name": {
                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                    "type": "string"
                },
                "optional": {
                    "description": "Specify whether the Secret or its key must be defined",
                    "type": "boolean"
                }
            }
        },
        "io.k8s.api.core.v1.SecretVolumeSource": {
            "description": "Adapts a Secret into a volume.\n\nThe contents of the target Secret's Data field will be presented in a volume as files using the keys in the Data field as the file names. Secret volumes support ownership management and SELinux relabeling.",
            "properties": {
                "defaultMode": {
                    "description": "Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                    "format": "int32",
                    "type": "integer"
                },
                "items": {
                    "description": "If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.core.v1.KeyToPath"
                    },
                    "type": "array"
                },
                "optional": {
                    "description": "Specify whether the Secret or it's keys must be defined",
                    "type": "boolean"
                },
                "secretName": {
                    "description": "Name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret",
                    "type": "string"
                }
            }
        },
        "io.k8s.api.core.v1.SecurityContext": {
            "description": "SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.",
            "properties": {
                "allowPrivilegeEscalation": {
                    "description": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN",
                    "type": "boolean"
                },
                "capabilities": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.Capabilities",
                    "description": "The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime."
                },
                "privileged": {
                    "description": "Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.",
                    "type": "boolean"
                },
                "procMount": {
                    "description": "procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.",
                    "type": "string"
                },
                "readOnlyRootFilesystem": {
                    "description": "Whether this container has a read-only root filesystem. Default is false.",
                    "type": "boolean"
                },
                "runAsGroup": {
                    "description": "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                    "format": "int64",
                    "type": "integer"
                },
                "runAsNonRoot": {
                    "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                    "type": "boolean"
                },
                "runAsUser": {
                    "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                    "format": "int64",
                    "type": "integer"
                },
                "seLinuxOptions": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.SELinuxOptions",
                    "description": "The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence."
                }
            }
        },
        "io.k8s.api.core.v1.ServiceAccountTokenProjection": {
            "description": "ServiceAccountTokenProjection represents a projected service account token volume. This projection can be used to insert a service account token into the pods runtime filesystem for use against APIs (Kubernetes API Server or otherwise).",
            "properties": {
                "audience": {
                    "description": "Audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver.",
                    "type": "string"
                },
                "expirationSeconds": {
                    "description": "ExpirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes.",
                    "format": "int64",
                    "type": "integer"
                },
                "path": {
                    "description": "Path is the path relative to the mount point of the file to project the token into.",
                    "type": "string"
                }
            },
            "required": [
                "path"
            ]
        },
        "io.k8s.api.core.v1.StorageOSVolumeSource": {
            "description": "Represents a StorageOS persistent volume resource.",
            "properties": {
                "fsType": {
                    "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                    "type": "string"
                },
                "readOnly": {
                    "description": "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
                    "type": "boolean"
                },
                "secretRef": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference",
                    "description": "SecretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted."
                },
                "volumeName": {
                    "description": "VolumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace.",
                    "type": "string"
                },
                "volumeNamespace": {
                    "description": "VolumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to \"default\" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.",
                    "type": "string"
                }
            }
        },
        "io.k8s.api.core.v1.Sysctl": {
            "description": "Sysctl defines a kernel parameter to be set",
            "properties": {
                "name": {
                    "description": "Name of a property to set",
                    "type": "string"
                },
                "value": {
                    "description": "Value of a property to set",
                    "type": "string"
                }
            },
            "required": [
                "name",
                "value"
            ]
        },
        "io.k8s.api.core.v1.TCPSocketAction": {
            "description": "TCPSocketAction describes an action based on opening a socket",
            "properties": {
                "host": {
                    "description": "Optional: Host name to connect to, defaults to the pod IP.",
                    "type": "string"
                },
                "port": {
                    "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString",
                    "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                }
            },
            "required": [
                "port"
            ]
        },
        "io.k8s.api.core.v1.Toleration": {
            "description": "The pod this Toleration is attached to tolerates any taint that matches the triple \u003ckey,value,effect\u003e using the matching operator \u003coperator\u003e.",
            "properties": {
                "effect": {
                    "description": "Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                    "type": "string"
                },
                "key": {
                    "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                    "type": "string"
                },
                "operator": {
                    "description": "Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.",
                    "type": "string"
                },
                "tolerationSeconds": {
                    "description": "TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.",
                    "format": "int64",
                    "type": "integer"
                },
                "value": {
                    "description": "Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.",
                    "type": "string"
                }
            }
        },
        "io.k8s.api.core.v1.Volume": {
            "description": "Volume represents a named volume in a pod that may be accessed by any container in the pod.",
            "properties": {
                "awsElasticBlockStore": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.AWSElasticBlockStoreVolumeSource",
                    "description": "AWSElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore"
                },
                "azureDisk": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.AzureDiskVolumeSource",
                    "description": "AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod."
                },
                "azureFile": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.AzureFileVolumeSource",
                    "description": "AzureFile represents an Azure File Service mount on the host and bind mount to the pod."
                },
                "cephfs": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.CephFSVolumeSource",
                    "description": "CephFS represents a Ceph FS mount on the host that shares a pod's lifetime"
                },
                "cinder": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.CinderVolumeSource",
                    "description": "Cinder represents a cinder volume attached and mounted on kubelets host machine More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md"
                },
                "configMap": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.ConfigMapVolumeSource",
                    "description": "ConfigMap represents a configMap that should populate this volume"
                },
                "downwardAPI": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.DownwardAPIVolumeSource",
                    "description": "DownwardAPI represents downward API about the pod that should populate this volume"
                },
                "emptyDir": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.EmptyDirVolumeSource",
                    "description": "EmptyDir represents a temporary directory that shares a pod's lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir"
                },
                "fc": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.FCVolumeSource",
                    "description": "FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod."
                },
                "flexVolume": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.FlexVolumeSource",
                    "description": "FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin."
                },
                "flocker": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.FlockerVolumeSource",
                    "description": "Flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running"
                },
                "gcePersistentDisk": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.GCEPersistentDiskVolumeSource",
                    "description": "GCEPersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk"
                },
                "gitRepo": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.GitRepoVolumeSource",
                    "description": "GitRepo represents a git repository at a particular revision. DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container."
                },
                "glusterfs": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.GlusterfsVolumeSource",
                    "description": "Glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md"
                },
                "hostPath": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.HostPathVolumeSource",
                    "description": "HostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath"
                },
                "iscsi": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.ISCSIVolumeSource",
                    "description": "ISCSI represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://releases.k8s.io/HEAD/examples/volumes/iscsi/README.md"
                },
                "name": {
                    "description": "Volume's name. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                    "type": "string"
                },
                "nfs": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.NFSVolumeSource",
                    "description": "NFS represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs"
                },
                "persistentVolumeClaim": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimVolumeSource",
                    "description": "PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims"
                },
                "photonPersistentDisk": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.PhotonPersistentDiskVolumeSource",
                    "description": "PhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine"
                },
                "portworxVolume": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.PortworxVolumeSource",
                    "description": "PortworxVolume represents a portworx volume attached and mounted on kubelets host machine"
                },
                "projected": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.ProjectedVolumeSource",
                    "description": "Items for all in one resources secrets, configmaps, and downward API"
                },
                "quobyte": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.QuobyteVolumeSource",
                    "description": "Quobyte represents a Quobyte mount on the host that shares a pod's lifetime"
                },
                "rbd": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.RBDVolumeSource",
                    "description": "RBD represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md"
                },
                "scaleIO": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.ScaleIOVolumeSource",
                    "description": "ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes."
                },
                "secret": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.SecretVolumeSource",
                    "description": "Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret"
                },
                "storageos": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.StorageOSVolumeSource",
                    "description": "StorageOS represents a StorageOS volume attached and mounted on Kubernetes nodes."
                },
                "vsphereVolume": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.VsphereVirtualDiskVolumeSource",
                    "description": "VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine"
                }
            },
            "required": [
                "name"
            ]
        },
        "io.k8s.api.core.v1.VolumeDevice": {
            "description": "volumeDevice describes a mapping of a raw block device within a container.",
            "properties": {
                "devicePath": {
                    "description": "devicePath is the path inside of the container that the device will be mapped to.",
                    "type": "string"
                },
                "name": {
                    "description": "name must match the name of a persistentVolumeClaim in the pod",
                    "type": "string"
                }
            },
            "required": [
                "name",
                "devicePath"
            ]
        },
        "io.k8s.api.core.v1.VolumeMount": {
            "description": "VolumeMount describes a mounting of a Volume within a container.",
            "properties": {
                "mountPath": {
                    "description": "Path within the container at which the volume should be mounted.  Must not contain ':'.",
                    "type": "string"
                },
                "mountPropagation": {
                    "description": "mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.",
                    "type": "string"
                },
                "name": {
                    "description": "This must match the Name of a Volume.",
                    "type": "string"
                },
                "readOnly": {
                    "description": "Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.",
                    "type": "boolean"
                },
                "subPath": {
                    "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                    "type": "string"
                }
            },
            "required": [
                "name",
                "mountPath"
            ]
        },
        "io.k8s.api.core.v1.VolumeProjection": {
            "description": "Projection that may be projected along with other supported volume types",
            "properties": {
                "configMap": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.ConfigMapProjection",
                    "description": "information about the configMap data to project"
                },
                "downwardAPI": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.DownwardAPIProjection",
                    "description": "information about the downwardAPI data to project"
                },
                "secret": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.SecretProjection",
                    "description": "information about the secret data to project"
                },
                "serviceAccountToken": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.ServiceAccountTokenProjection",
                    "description": "information about the serviceAccountToken data to project"
                }
            }
        },
        "io.k8s.api.core.v1.VsphereVirtualDiskVolumeSource": {
            "description": "Represents a vSphere volume resource.",
            "properties": {
                "fsType": {
                    "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                    "type": "string"
                },
                "storagePolicyID": {
                    "description": "Storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.",
                    "type": "string"
                },
                "storagePolicyName": {
                    "description": "Storage Policy Based Management (SPBM) profile name.",
                    "type": "string"
                },
                "volumePath": {
                    "description": "Path that identifies vSphere volume vmdk",
                    "type": "string"
                }
            },
            "required": [
                "volumePath"
            ]
        },
        "io.k8s.api.core.v1.WeightedPodAffinityTerm": {
            "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
            "properties": {
                "podAffinityTerm": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.PodAffinityTerm",
                    "description": "Required. A pod affinity term, associated with the corresponding weight."
                },
                "weight": {
                    "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "weight",
                "podAffinityTerm"
            ]
        },
        "io.k8s.api.extensions.v1beta1.AllowedFlexVolume": {
            "description": "AllowedFlexVolume represents a single Flexvolume that is allowed to be used. Deprecated: use AllowedFlexVolume from policy API Group instead.",
            "properties": {
                "driver": {
                    "description": "driver is the name of the Flexvolume driver.",
                    "type": "string"
                }
            },
            "required": [
                "driver"
            ]
        },
        "io.k8s.api.extensions.v1beta1.AllowedHostPath": {
            "description": "AllowedHostPath defines the host volume conditions that will be enabled by a policy for pods to use. It requires the path prefix to be defined. Deprecated: use AllowedHostPath from policy API Group instead.",
            "properties": {
                "pathPrefix": {
                    "description": "pathPrefix is the path prefix that the host volume must match. It does not support `*`. Trailing slashes are trimmed when validating the path prefix with a host path.\n\nExamples: `/foo` would allow `/foo`, `/foo/` and `/foo/bar` `/foo` would not allow `/food` or `/etc/foo`",
                    "type": "string"
                },
                "readOnly": {
                    "description": "when set to true, will allow host volumes matching the pathPrefix only if all volume mounts are readOnly.",
                    "type": "boolean"
                }
            }
        },
        "io.k8s.api.extensions.v1beta1.FSGroupStrategyOptions": {
            "description": "FSGroupStrategyOptions defines the strategy type and options used to create the strategy. Deprecated: use FSGroupStrategyOptions from policy API Group instead.",
            "properties": {
                "ranges": {
                    "description": "ranges are the allowed ranges of fs groups.  If you would like to force a single fs group then supply a single range with the same start and end. Required for MustRunAs.",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.IDRange"
                    },
                    "type": "array"
                },
                "rule": {
                    "description": "rule is the strategy that will dictate what FSGroup is used in the SecurityContext.",
                    "type": "string"
                }
            }
        },
        "io.k8s.api.extensions.v1beta1.HostPortRange": {
            "description": "HostPortRange defines a range of host ports that will be enabled by a policy for pods to use.  It requires both the start and end to be defined. Deprecated: use HostPortRange from policy API Group instead.",
            "properties": {
                "max": {
                    "description": "max is the end of the range, inclusive.",
                    "format": "int32",
                    "type": "integer"
                },
                "min": {
                    "description": "min is the start of the range, inclusive.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "min",
                "max"
            ]
        },
        "io.k8s.api.extensions.v1beta1.IDRange": {
            "description": "IDRange provides a min/max of an allowed range of IDs. Deprecated: use IDRange from policy API Group instead.",
            "properties": {
                "max": {
                    "description": "max is the end of the range, inclusive.",
                    "format": "int64",
                    "type": "integer"
                },
                "min": {
                    "description": "min is the start of the range, inclusive.",
                    "format": "int64",
                    "type": "integer"
                }
            },
            "required": [
                "min",
                "max"
            ]
        },
        "io.k8s.api.extensions.v1beta1.PodSecurityPolicy": {
            "description": "PodSecurityPolicy governs the ability to make requests that affect the Security Context that will be applied to a pod and container. Deprecated: use PodSecurityPolicy from policy API Group instead.",
            "properties": {
                "apiVersion": {
                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
                    "type": "string"
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                    "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata"
                },
                "spec": {
                    "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.PodSecurityPolicySpec",
                    "description": "spec defines the policy enforced."
                }
            },
            "x-kubernetes-group-version-kind": [
                {
                    "group": "extensions",
                    "kind": "PodSecurityPolicy",
                    "version": "v1beta1"
                }
            ]
        },
        "io.k8s.api.extensions.v1beta1.PodSecurityPolicyList": {
            "description": "PodSecurityPolicyList is a list of PodSecurityPolicy objects. Deprecated: use PodSecurityPolicyList from policy API Group instead.",
            "properties": {
                "apiVersion": {
                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
                    "type": "string"
                },
                "items": {
                    "description": "items is a list of schema objects.",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.PodSecurityPolicy"
                    },
                    "type": "array"
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
                    "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata"
                }
            },
            "required": [
                "items"
            ],
            "x-kubernetes-group-version-kind": [
                {
                    "group": "extensions",
                    "kind": "PodSecurityPolicyList",
                    "version": "v1beta1"
                }
            ]
        },
        "io.k8s.api.extensions.v1beta1.PodSecurityPolicySpec": {
            "description": "PodSecurityPolicySpec defines the policy enforced. Deprecated: use PodSecurityPolicySpec from policy API Group instead.",
            "properties": {
                "allowPrivilegeEscalation": {
                    "description": "allowPrivilegeEscalation determines if a pod can request to allow privilege escalation. If unspecified, defaults to true.",
                    "type": "boolean"
                },
                "allowedCapabilities": {
                    "description": "allowedCapabilities is a list of capabilities that can be requested to add to the container. Capabilities in this field may be added at the pod author's discretion. You must not list a capability in both allowedCapabilities and requiredDropCapabilities.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "allowedFlexVolumes": {
                    "description": "allowedFlexVolumes is a whitelist of allowed Flexvolumes.  Empty or nil indicates that all Flexvolumes may be used.  This parameter is effective only when the usage of the Flexvolumes is allowed in the \"volumes\" field.",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.AllowedFlexVolume"
                    },
                    "type": "array"
                },
                "allowedHostPaths": {
                    "description": "allowedHostPaths is a white list of allowed host paths. Empty indicates that all host paths may be used.",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.AllowedHostPath"
                    },
                    "type": "array"
                },
                "allowedProcMountTypes": {
                    "description": "AllowedProcMountTypes is a whitelist of allowed ProcMountTypes. Empty or nil indicates that only the DefaultProcMountType may be used. This requires the ProcMountType feature flag to be enabled.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "allowedUnsafeSysctls": {
                    "description": "allowedUnsafeSysctls is a list of explicitly allowed unsafe sysctls, defaults to none. Each entry is either a plain sysctl name or ends in \"*\" in which case it is considered as a prefix of allowed sysctls. Single * means all unsafe sysctls are allowed. Kubelet has to whitelist all allowed unsafe sysctls explicitly to avoid rejection.\n\nExamples: e.g. \"foo/*\" allows \"foo/bar\", \"foo/baz\", etc. e.g. \"foo.*\" allows \"foo.bar\", \"foo.baz\", etc.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "defaultAddCapabilities": {
                    "description": "defaultAddCapabilities is the default set of capabilities that will be added to the container unless the pod spec specifically drops the capability.  You may not list a capability in both defaultAddCapabilities and requiredDropCapabilities. Capabilities added here are implicitly allowed, and need not be included in the allowedCapabilities list.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "defaultAllowPrivilegeEscalation": {
                    "description": "defaultAllowPrivilegeEscalation controls the default setting for whether a process can gain more privileges than its parent process.",
                    "type": "boolean"
                },
                "forbiddenSysctls": {
                    "description": "forbiddenSysctls is a list of explicitly forbidden sysctls, defaults to none. Each entry is either a plain sysctl name or ends in \"*\" in which case it is considered as a prefix of forbidden sysctls. Single * means all sysctls are forbidden.\n\nExamples: e.g. \"foo/*\" forbids \"foo/bar\", \"foo/baz\", etc. e.g. \"foo.*\" forbids \"foo.bar\", \"foo.baz\", etc.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "fsGroup": {
                    "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.FSGroupStrategyOptions",
                    "description": "fsGroup is the strategy that will dictate what fs group is used by the SecurityContext."
                },
                "hostIPC": {
                    "description": "hostIPC determines if the policy allows the use of HostIPC in the pod spec.",
                    "type": "boolean"
                },
                "hostNetwork": {
                    "description": "hostNetwork determines if the policy allows the use of HostNetwork in the pod spec.",
                    "type": "boolean"
                },
                "hostPID": {
                    "description": "hostPID determines if the policy allows the use of HostPID in the pod spec.",
                    "type": "boolean"
                },
                "hostPorts": {
                    "description": "hostPorts determines which host port ranges are allowed to be exposed.",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.HostPortRange"
                    },
                    "type": "array"
                },
                "privileged": {
                    "description": "privileged determines if a pod can request to be run as privileged.",
                    "type": "boolean"
                },
                "readOnlyRootFilesystem": {
                    "description": "readOnlyRootFilesystem when set to true will force containers to run with a read only root file system.  If the container specifically requests to run with a non-read only root file system the PSP should deny the pod. If set to false the container may run with a read only root file system if it wishes but it will not be forced to.",
                    "type": "boolean"
                },
                "requiredDropCapabilities": {
                    "description": "requiredDropCapabilities are the capabilities that will be dropped from the container.  These are required to be dropped and cannot be added.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "runAsGroup": {
                    "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.RunAsGroupStrategyOptions",
                    "description": "RunAsGroup is the strategy that will dictate the allowable RunAsGroup values that may be set. If this field is omitted, the pod's RunAsGroup can take any value. This field requires the RunAsGroup feature gate to be enabled."
                },
                "runAsUser": {
                    "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.RunAsUserStrategyOptions",
                    "description": "runAsUser is the strategy that will dictate the allowable RunAsUser values that may be set."
                },
                "seLinux": {
                    "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.SELinuxStrategyOptions",
                    "description": "seLinux is the strategy that will dictate the allowable labels that may be set."
                },
                "supplementalGroups": {
                    "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.SupplementalGroupsStrategyOptions",
                    "description": "supplementalGroups is the strategy that will dictate what supplemental groups are used by the SecurityContext."
                },
                "volumes": {
                    "description": "volumes is a white list of allowed volume plugins. Empty indicates that no volumes may be used. To allow all volumes you may use '*'.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "seLinux",
                "runAsUser",
                "supplementalGroups",
                "fsGroup"
            ]
        },
        "io.k8s.api.extensions.v1beta1.RunAsGroupStrategyOptions": {
            "description": "RunAsGroupStrategyOptions defines the strategy type and any options used to create the strategy. Deprecated: use RunAsGroupStrategyOptions from policy API Group instead.",
            "properties": {
                "ranges": {
                    "description": "ranges are the allowed ranges of gids that may be used. If you would like to force a single gid then supply a single range with the same start and end. Required for MustRunAs.",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.IDRange"
                    },
                    "type": "array"
                },
                "rule": {
                    "description": "rule is the strategy that will dictate the allowable RunAsGroup values that may be set.",
                    "type": "string"
                }
            },
            "required": [
                "rule"
            ]
        },
        "io.k8s.api.extensions.v1beta1.RunAsUserStrategyOptions": {
            "description": "RunAsUserStrategyOptions defines the strategy type and any options used to create the strategy. Deprecated: use RunAsUserStrategyOptions from policy API Group instead.",
            "properties": {
                "ranges": {
                    "description": "ranges are the allowed ranges of uids that may be used. If you would like to force a single uid then supply a single range with the same start and end. Required for MustRunAs.",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.IDRange"
                    },
                    "type": "array"
                },
                "rule": {
                    "description": "rule is the strategy that will dictate the allowable RunAsUser values that may be set.",
                    "type": "string"
                }
            },
            "required": [
                "rule"
            ]
        },
        "io.k8s.api.extensions.v1beta1.SELinuxStrategyOptions": {
            "description": "SELinuxStrategyOptions defines the strategy type and any options used to create the strategy. Deprecated: use SELinuxStrategyOptions from policy API Group instead.",
            "properties": {
                "rule": {
                    "description": "rule is the strategy that will dictate the allowable labels that may be set.",
                    "type": "string"
                },
                "seLinuxOptions": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.SELinuxOptions",
                    "description": "seLinuxOptions required to run as; required for MustRunAs More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/"
                }
            },
            "required": [
                "rule"
            ]
        },
        "io.k8s.api.extensions.v1beta1.SupplementalGroupsStrategyOptions": {
            "description": "SupplementalGroupsStrategyOptions defines the strategy type and options used to create the strategy. Deprecated: use SupplementalGroupsStrategyOptions from policy API Group instead.",
            "properties": {
                "ranges": {
                    "description": "ranges are the allowed ranges of supplemental groups.  If you would like to force a single supplemental group then supply a single range with the same start and end. Required for MustRunAs.",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.IDRange"
                    },
                    "type": "array"
                },
                "rule": {
                    "description": "rule is the strategy that will dictate what supplemental groups is used in the SecurityContext.",
                    "type": "string"
                }
            }
        },
        "io.k8s.api.policy.v1beta1.AllowedFlexVolume": {
            "description": "AllowedFlexVolume represents a single Flexvolume that is allowed to be used.",
            "properties": {
                "driver": {
                    "description": "driver is the name of the Flexvolume driver.",
                    "type": "string"
                }
            },
            "required": [
                "driver"
            ]
        },
        "io.k8s.api.policy.v1beta1.AllowedHostPath": {
            "description": "AllowedHostPath defines the host volume conditions that will be enabled by a policy for pods to use. It requires the path prefix to be defined.",
            "properties": {
                "pathPrefix": {
                    "description": "pathPrefix is the path prefix that the host volume must match. It does not support `*`. Trailing slashes are trimmed when validating the path prefix with a host path.\n\nExamples: `/foo` would allow `/foo`, `/foo/` and `/foo/bar` `/foo` would not allow `/food` or `/etc/foo`",
                    "type": "string"
                },
                "readOnly": {
                    "description": "when set to true, will allow host volumes matching the pathPrefix only if all volume mounts are readOnly.",
                    "type": "boolean"
                }
            }
        },
        "io.k8s.api.policy.v1beta1.Eviction": {
            "description": "Eviction evicts a pod from its node subject to certain policies and safety constraints. This is a subresource of Pod.  A request to cause such an eviction is created by POSTing to .../pods/\u003cpod name\u003e/evictions.",
            "properties": {
                "apiVersion": {
                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
                    "type": "string"
                },
                "deleteOptions": {
                    "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions",
                    "description": "DeleteOptions may be provided"
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                    "description": "ObjectMeta describes the pod that is being evicted."
                }
            },
            "x-kubernetes-group-version-kind": [
                {
                    "group": "policy",
                    "kind": "Eviction",
                    "version": "v1beta1"
                }
            ]
        },
        "io.k8s.api.policy.v1beta1.FSGroupStrategyOptions": {
            "description": "FSGroupStrategyOptions defines the strategy type and options used to create the strategy.",
            "properties": {
                "ranges": {
                    "description": "ranges are the allowed ranges of fs groups.  If you would like to force a single fs group then supply a single range with the same start and end. Required for MustRunAs.",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.policy.v1beta1.IDRange"
                    },
                    "type": "array"
                },
                "rule": {
                    "description": "rule is the strategy that will dictate what FSGroup is used in the SecurityContext.",
                    "type": "string"
                }
            }
        },
        "io.k8s.api.policy.v1beta1.HostPortRange": {
            "description": "HostPortRange defines a range of host ports that will be enabled by a policy for pods to use.  It requires both the start and end to be defined.",
            "properties": {
                "max": {
                    "description": "max is the end of the range, inclusive.",
                    "format": "int32",
                    "type": "integer"
                },
                "min": {
                    "description": "min is the start of the range, inclusive.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "min",
                "max"
            ]
        },
        "io.k8s.api.policy.v1beta1.IDRange": {
            "description": "IDRange provides a min/max of an allowed range of IDs.",
            "properties": {
                "max": {
                    "description": "max is the end of the range, inclusive.",
                    "format": "int64",
                    "type": "integer"
                },
                "min": {
                    "description": "min is the start of the range, inclusive.",
                    "format": "int64",
                    "type": "integer"
                }
            },
            "required": [
                "min",
                "max"
            ]
        },
        "io.k8s.api.policy.v1beta1.PodSecurityPolicy": {
            "description": "PodSecurityPolicy governs the ability to make requests that affect the Security Context that will be applied to a pod and container.",
            "properties": {
                "apiVersion": {
                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
                    "type": "string"
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                    "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata"
                },
                "spec": {
                    "$ref": "#/definitions/io.k8s.api.policy.v1beta1.PodSecurityPolicySpec",
                    "description": "spec defines the policy enforced."
                }
            },
            "x-kubernetes-group-version-kind": [
                {
                    "group": "policy",
                    "kind": "PodSecurityPolicy",
                    "version": "v1beta1"
                }
            ]
        },
        "io.k8s.api.policy.v1beta1.PodSecurityPolicyList": {
            "description": "PodSecurityPolicyList is a list of PodSecurityPolicy objects.",
            "properties": {
                "apiVersion": {
                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
                    "type": "string"
                },
                "items": {
                    "description": "items is a list of schema objects.",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.policy.v1beta1.PodSecurityPolicy"
                    },
                    "type": "array"
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
                    "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata"
                }
            },
            "required": [
                "items"
            ],
            "x-kubernetes-group-version-kind": [
                {
                    "group": "policy",
                    "kind": "PodSecurityPolicyList",
                    "version": "v1beta1"
                }
            ]
        },
        "io.k8s.api.policy.v1beta1.PodSecurityPolicySpec": {
            "description": "PodSecurityPolicySpec defines the policy enforced.",
            "properties": {
                "allowPrivilegeEscalation": {
                    "description": "allowPrivilegeEscalation determines if a pod can request to allow privilege escalation. If unspecified, defaults to true.",
                    "type": "boolean"
                },
                "allowedCapabilities": {
                    "description": "allowedCapabilities is a list of capabilities that can be requested to add to the container. Capabilities in this field may be added at the pod author's discretion. You must not list a capability in both allowedCapabilities and requiredDropCapabilities.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "allowedFlexVolumes": {
                    "description": "allowedFlexVolumes is a whitelist of allowed Flexvolumes.  Empty or nil indicates that all Flexvolumes may be used.  This parameter is effective only when the usage of the Flexvolumes is allowed in the \"volumes\" field.",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.policy.v1beta1.AllowedFlexVolume"
                    },
                    "type": "array"
                },
                "allowedHostPaths": {
                    "description": "allowedHostPaths is a white list of allowed host paths. Empty indicates that all host paths may be used.",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.policy.v1beta1.AllowedHostPath"
                    },
                    "type": "array"
                },
                "allowedProcMountTypes": {
                    "description": "AllowedProcMountTypes is a whitelist of allowed ProcMountTypes. Empty or nil indicates that only the DefaultProcMountType may be used. This requires the ProcMountType feature flag to be enabled.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "allowedUnsafeSysctls": {
                    "description": "allowedUnsafeSysctls is a list of explicitly allowed unsafe sysctls, defaults to none. Each entry is either a plain sysctl name or ends in \"*\" in which case it is considered as a prefix of allowed sysctls. Single * means all unsafe sysctls are allowed. Kubelet has to whitelist all allowed unsafe sysctls explicitly to avoid rejection.\n\nExamples: e.g. \"foo/*\" allows \"foo/bar\", \"foo/baz\", etc. e.g. \"foo.*\" allows \"foo.bar\", \"foo.baz\", etc.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "defaultAddCapabilities": {
                    "description": "defaultAddCapabilities is the default set of capabilities that will be added to the container unless the pod spec specifically drops the capability.  You may not list a capability in both defaultAddCapabilities and requiredDropCapabilities. Capabilities added here are implicitly allowed, and need not be included in the allowedCapabilities list.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "defaultAllowPrivilegeEscalation": {
                    "description": "defaultAllowPrivilegeEscalation controls the default setting for whether a process can gain more privileges than its parent process.",
                    "type": "boolean"
                },
                "forbiddenSysctls": {
                    "description": "forbiddenSysctls is a list of explicitly forbidden sysctls, defaults to none. Each entry is either a plain sysctl name or ends in \"*\" in which case it is considered as a prefix of forbidden sysctls. Single * means all sysctls are forbidden.\n\nExamples: e.g. \"foo/*\" forbids \"foo/bar\", \"foo/baz\", etc. e.g. \"foo.*\" forbids \"foo.bar\", \"foo.baz\", etc.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "fsGroup": {
                    "$ref": "#/definitions/io.k8s.api.policy.v1beta1.FSGroupStrategyOptions",
                    "description": "fsGroup is the strategy that will dictate what fs group is used by the SecurityContext."
                },
                "hostIPC": {
                    "description": "hostIPC determines if the policy allows the use of HostIPC in the pod spec.",
                    "type": "boolean"
                },
                "hostNetwork": {
                    "description": "hostNetwork determines if the policy allows the use of HostNetwork in the pod spec.",
                    "type": "boolean"
                },
                "hostPID": {
                    "description": "hostPID determines if the policy allows the use of HostPID in the pod spec.",
                    "type": "boolean"
                },
                "hostPorts": {
                    "description": "hostPorts determines which host port ranges are allowed to be exposed.",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.policy.v1beta1.HostPortRange"
                    },
                    "type": "array"
                },
                "privileged": {
                    "description": "privileged determines if a pod can request to be run as privileged.",
                    "type": "boolean"
                },
                "readOnlyRootFilesystem": {
                    "description": "readOnlyRootFilesystem when set to true will force containers to run with a read only root file system.  If the container specifically requests to run with a non-read only root file system the PSP should deny the pod. If set to false the container may run with a read only root file system if it wishes but it will not be forced to.",
                    "type": "boolean"
                },
                "requiredDropCapabilities": {
                    "description": "requiredDropCapabilities are the capabilities that will be dropped from the container.  These are required to be dropped and cannot be added.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "runAsGroup": {
                    "$ref": "#/definitions/io.k8s.api.policy.v1beta1.RunAsGroupStrategyOptions",
                    "description": "RunAsGroup is the strategy that will dictate the allowable RunAsGroup values that may be set. If this field is omitted, the pod's RunAsGroup can take any value. This field requires the RunAsGroup feature gate to be enabled."
                },
                "runAsUser": {
                    "$ref": "#/definitions/io.k8s.api.policy.v1beta1.RunAsUserStrategyOptions",
                    "description": "runAsUser is the strategy that will dictate the allowable RunAsUser values that may be set."
                },
                "seLinux": {
                    "$ref": "#/definitions/io.k8s.api.policy.v1beta1.SELinuxStrategyOptions",
                    "description": "seLinux is the strategy that will dictate the allowable labels that may be set."
                },
                "supplementalGroups": {
                    "$ref": "#/definitions/io.k8s.api.policy.v1beta1.SupplementalGroupsStrategyOptions",
                    "description": "supplementalGroups is the strategy that will dictate what supplemental groups are used by the SecurityContext."
                },
                "volumes": {
                    "description": "volumes is a white list of allowed volume plugins. Empty indicates that no volumes may be used. To allow all volumes you may use '*'.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "seLinux",
                "runAsUser",
                "supplementalGroups",
                "fsGroup"
            ]
        },
        "io.k8s.api.policy.v1beta1.RunAsGroupStrategyOptions": {
            "description": "RunAsGroupStrategyOptions defines the strategy type and any options used to create the strategy.",
            "properties": {
                "ranges": {
                    "description": "ranges are the allowed ranges of gids that may be used. If you would like to force a single gid then supply a single range with the same start and end. Required for MustRunAs.",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.policy.v1beta1.IDRange"
                    },
                    "type": "array"
                },
                "rule": {
                    "description": "rule is the strategy that will dictate the allowable RunAsGroup values that may be set.",
                    "type": "string"
                }
            },
            "required": [
                "rule"
            ]
        },
        "io.k8s.api.policy.v1beta1.RunAsUserStrategyOptions": {
            "description": "RunAsUserStrategyOptions defines the strategy type and any options used to create the strategy.",
            "properties": {
                "ranges": {
                    "description": "ranges are the allowed ranges of uids that may be used. If you would like to force a single uid then supply a single range with the same start and end. Required for MustRunAs.",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.policy.v1beta1.IDRange"
                    },
                    "type": "array"
                },
                "rule": {
                    "description": "rule is the strategy that will dictate the allowable RunAsUser values that may be set.",
                    "type": "string"
                }
            },
            "required": [
                "rule"
            ]
        },
        "io.k8s.api.policy.v1beta1.SELinuxStrategyOptions": {
            "description": "SELinuxStrategyOptions defines the strategy type and any options used to create the strategy.",
            "properties": {
                "rule": {
                    "description": "rule is the strategy that will dictate the allowable labels that may be set.",
                    "type": "string"
                },
                "seLinuxOptions": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.SELinuxOptions",
                    "description": "seLinuxOptions required to run as; required for MustRunAs More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/"
                }
            },
            "required": [
                "rule"
            ]
        },
        "io.k8s.api.policy.v1beta1.SupplementalGroupsStrategyOptions": {
            "description": "SupplementalGroupsStrategyOptions defines the strategy type and options used to create the strategy.",
            "properties": {
                "ranges": {
                    "description": "ranges are the allowed ranges of supplemental groups.  If you would like to force a single supplemental group then supply a single range with the same start and end. Required for MustRunAs.",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.policy.v1beta1.IDRange"
                    },
                    "type": "array"
                },
                "rule": {
                    "description": "rule is the strategy that will dictate what supplemental groups is used in the SecurityContext.",
                    "type": "string"
                }
            }
        },
        "io.k8s.apimachinery.pkg.api.resource.Quantity": {
            "description": "Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and Int64() accessors.\n\nThe serialization format is:\n\n\u003cquantity\u003e        ::= \u003csignedNumber\u003e\u003csuffix\u003e\n  (Note that \u003csuffix\u003e may be empty, from the \"\" case in \u003cdecimalSI\u003e.)\n\u003cdigit\u003e           ::= 0 | 1 | ... | 9 \u003cdigits\u003e          ::= \u003cdigit\u003e | \u003cdigit\u003e\u003cdigits\u003e \u003cnumber\u003e          ::= \u003cdigits\u003e | \u003cdigits\u003e.\u003cdigits\u003e | \u003cdigits\u003e. | .\u003cdigits\u003e \u003csign\u003e            ::= \"+\" | \"-\" \u003csignedNumber\u003e    ::= \u003cnumber\u003e | \u003csign\u003e\u003cnumber\u003e \u003csuffix\u003e          ::= \u003cbinarySI\u003e | \u003cdecimalExponent\u003e | \u003cdecimalSI\u003e \u003cbinarySI\u003e        ::= Ki | Mi | Gi | Ti | Pi | Ei\n  (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)\n\u003cdecimalSI\u003e       ::= m | \"\" | k | M | G | T | P | E\n  (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)\n\u003cdecimalExponent\u003e ::= \"e\" \u003csignedNumber\u003e | \"E\" \u003csignedNumber\u003e\n\nNo matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.\n\nWhen a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.\n\nBefore serializing, Quantity will be put in \"canonical form\". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:\n  a. No precision is lost\n  b. No fractional digits will be emitted\n  c. The exponent (or suffix) is as large as possible.\nThe sign will be omitted unless the number is negative.\n\nExamples:\n  1.5 will be serialized as \"1500m\"\n  1.5Gi will be serialized as \"1536Mi\"\n\nNote that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.\n\nNon-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)\n\nThis format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.",
            "type": "string"
        },
        "io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions": {
            "description": "DeleteOptions may be provided when deleting an API object.",
            "properties": {
                "apiVersion": {
                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
                    "type": "string"
                },
                "dryRun": {
                    "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "gracePeriodSeconds": {
                    "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
                    "format": "int64",
                    "type": "integer"
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
                    "type": "string"
                },
                "orphanDependents": {
                    "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
                    "type": "boolean"
                },
                "preconditions": {
                    "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Preconditions",
                    "description": "Must be fulfilled before a deletion is carried out. If not possible, a 409 Conflict status will be returned."
                },
                "propagationPolicy": {
                    "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                    "type": "string"
                }
            },
            "x-kubernetes-group-version-kind": [
                {
                    "group": "",
                    "kind": "DeleteOptions",
                    "version": "v1"
                },
                {
                    "group": "admission.k8s.io",
                    "kind": "DeleteOptions",
                    "version": "v1beta1"
                },
                {
                    "group": "admissionregistration.k8s.io",
                    "kind": "DeleteOptions",
                    "version": "v1alpha1"
                },
                {
                    "group": "admissionregistration.k8s.io",
                    "kind": "DeleteOptions",
                    "version": "v1beta1"
                },
                {
                    "group": "apiextensions.k8s.io",
                    "kind": "DeleteOptions",
                    "version": "v1beta1"
                },
                {
                    "group": "apiregistration.k8s.io",
                    "kind": "DeleteOptions",
                    "version": "v1"
                },
                {
                    "group": "apiregistration.k8s.io",
                    "kind": "DeleteOptions",
                    "version": "v1beta1"
                },
                {
                    "group": "apps",
                    "kind": "DeleteOptions",
                    "version": "v1"
                },
                {
                    "group": "apps",
                    "kind": "DeleteOptions",
                    "version": "v1beta1"
                },
                {
                    "group": "apps",
                    "kind": "DeleteOptions",
                    "version": "v1beta2"
                },
                {
                    "group": "auditregistration.k8s.io",
                    "kind": "DeleteOptions",
                    "version": "v1alpha1"
                },
                {
                    "group": "authentication.k8s.io",
                    "kind": "DeleteOptions",
                    "version": "v1"
                },
                {
                    "group": "authentication.k8s.io",
                    "kind": "DeleteOptions",
                    "version": "v1beta1"
                },
                {
                    "group": "authorization.k8s.io",
                    "kind": "DeleteOptions",
                    "version": "v1"
                },
                {
                    "group": "authorization.k8s.io",
                    "kind": "DeleteOptions",
                    "version": "v1beta1"
                },
                {
                    "group": "autoscaling",
                    "kind": "DeleteOptions",
                    "version": "v1"
                },
                {
                    "group": "autoscaling",
                    "kind": "DeleteOptions",
                    "version": "v2beta1"
                },
                {
                    "group": "autoscaling",
                    "kind": "DeleteOptions",
                    "version": "v2beta2"
                },
                {
                    "group": "batch",
                    "kind": "DeleteOptions",
                    "version": "v1"
                },
                {
                    "group": "batch",
                    "kind": "DeleteOptions",
                    "version": "v1beta1"
                },
                {
                    "group": "batch",
                    "kind": "DeleteOptions",
                    "version": "v2alpha1"
                },
                {
                    "group": "certificates.k8s.io",
                    "kind": "DeleteOptions",
                    "version": "v1beta1"
                },
                {
                    "group": "coordination.k8s.io",
                    "kind": "DeleteOptions",
                    "version": "v1beta1"
                },
                {
                    "group": "events.k8s.io",
                    "kind": "DeleteOptions",
                    "version": "v1beta1"
                },
                {
                    "group": "extensions",
                    "kind": "DeleteOptions",
                    "version": "v1beta1"
                },
                {
                    "group": "imagepolicy.k8s.io",
                    "kind": "DeleteOptions",
                    "version": "v1alpha1"
                },
                {
                    "group": "networking.k8s.io",
                    "kind": "DeleteOptions",
                    "version": "v1"
                },
                {
                    "group": "policy",
                    "kind": "DeleteOptions",
                    "version": "v1beta1"
                },
                {
                    "group": "rbac.authorization.k8s.io",
                    "kind": "DeleteOptions",
                    "version": "v1"
                },
                {
                    "group": "rbac.authorization.k8s.io",
                    "kind": "DeleteOptions",
                    "version": "v1alpha1"
                },
                {
                    "group": "rbac.authorization.k8s.io",
                    "kind": "DeleteOptions",
                    "version": "v1beta1"
                },
                {
                    "group": "scheduling.k8s.io",
                    "kind": "DeleteOptions",
                    "version": "v1alpha1"
                },
                {
                    "group": "scheduling.k8s.io",
                    "kind": "DeleteOptions",
                    "version": "v1beta1"
                },
                {
                    "group": "settings.k8s.io",
                    "kind": "DeleteOptions",
                    "version": "v1alpha1"
                },
                {
                    "group": "storage.k8s.io",
                    "kind": "DeleteOptions",
                    "version": "v1"
                },
                {
                    "group": "storage.k8s.io",
                    "kind": "DeleteOptions",
                    "version": "v1alpha1"
                },
                {
                    "group": "storage.k8s.io",
                    "kind": "DeleteOptions",
                    "version": "v1beta1"
                }
            ]
        },
        "io.k8s.apimachinery.pkg.apis.meta.v1.Initializer": {
            "description": "Initializer is information about an initializer that has not yet completed.",
            "properties": {
                "name": {
                    "description": "name of the process that is responsible for initializing this object.",
                    "type": "string"
                }
            },
            "required": [
                "name"
            ]
        },
        "io.k8s.apimachinery.pkg.apis.meta.v1.Initializers": {
            "description": "Initializers tracks the progress of initialization.",
            "properties": {
                "pending": {
                    "description": "Pending is a list of initializers that must execute in order before this object is visible. When the last pending initializer is removed, and no failing result is set, the initializers struct will be set to nil and the object is considered as initialized and visible to all clients.",
                    "items": {
                        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Initializer"
                    },
                    "type": "array",
                    "x-kubernetes-patch-merge-key": "name",
                    "x-kubernetes-patch-strategy": "merge"
                },
                "result": {
                    "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status",
                    "description": "If result is set with the Failure field, the object will be persisted to storage and then deleted, ensuring that other clients can observe the deletion."
                }
            },
            "required": [
                "pending"
            ]
        },
        "io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector": {
            "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.",
            "properties": {
                "matchExpressions": {
                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                    "items": {
                        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement"
                    },
                    "type": "array"
                },
                "matchLabels": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                    "type": "object"
                }
            }
        },
        "io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement": {
            "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
            "properties": {
                "key": {
                    "description": "key is the label key that the selector applies to.",
                    "type": "string",
                    "x-kubernetes-patch-merge-key": "key",
                    "x-kubernetes-patch-strategy": "merge"
                },
                "operator": {
                    "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                    "type": "string"
                },
                "values": {
                    "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "key",
                "operator"
            ]
        },
        "io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta": {
            "description": "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.",
            "properties": {
                "continue": {
                    "description": "continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message.",
                    "type": "string"
                },
                "resourceVersion": {
                    "description": "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency",
                    "type": "string"
                },
                "selfLink": {
                    "description": "selfLink is a URL representing this object. Populated by the system. Read-only.",
                    "type": "string"
                }
            }
        },
        "io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta": {
            "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
            "properties": {
                "annotations": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
                    "type": "object"
                },
                "clusterName": {
                    "description": "The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.",
                    "type": "string"
                },
                "creationTimestamp": {
                    "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
                    "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata"
                },
                "deletionGracePeriodSeconds": {
                    "description": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.",
                    "format": "int64",
                    "type": "integer"
                },
                "deletionTimestamp": {
                    "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
                    "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata"
                },
                "finalizers": {
                    "description": "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "x-kubernetes-patch-strategy": "merge"
                },
                "generateName": {
                    "description": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency",
                    "type": "string"
                },
                "generation": {
                    "description": "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.",
                    "format": "int64",
                    "type": "integer"
                },
                "initializers": {
                    "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Initializers",
                    "description": "An initializer is a controller which enforces some system invariant at object creation time. This field is a list of initializers that have not yet acted on this object. If nil or empty, this object has been completely initialized. Otherwise, the object is considered uninitialized and is hidden (in list/watch and get calls) from clients that haven't explicitly asked to observe uninitialized objects.\n\nWhen an object is created, the system will populate this list with the current set of initializers. Only privileged users may set or modify this list. Once it is empty, it may not be modified further by any user."
                },
                "labels": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                    "type": "object"
                },
                "name": {
                    "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                    "type": "string"
                },
                "namespace": {
                    "description": "Namespace defines the space within each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces",
                    "type": "string"
                },
                "ownerReferences": {
                    "description": "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.",
                    "items": {
                        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference"
                    },
                    "type": "array",
                    "x-kubernetes-patch-merge-key": "uid",
                    "x-kubernetes-patch-strategy": "merge"
                },
                "resourceVersion": {
                    "description": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency",
                    "type": "string"
                },
                "selfLink": {
                    "description": "SelfLink is a URL representing this object. Populated by the system. Read-only.",
                    "type": "string"
                },
                "uid": {
                    "description": "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                    "type": "string"
                }
            }
        },
        "io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference": {
            "description": "OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.",
            "properties": {
                "apiVersion": {
                    "description": "API version of the referent.",
                    "type": "string"
                },
                "blockOwnerDeletion": {
                    "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.",
                    "type": "boolean"
                },
                "controller": {
                    "description": "If true, this reference points to the managing controller.",
                    "type": "boolean"
                },
                "kind": {
                    "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                    "type": "string"
                },
                "uid": {
                    "description": "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                    "type": "string"
                }
            },
            "required": [
                "apiVersion",
                "kind",
                "name",
                "uid"
            ]
        },
        "io.k8s.apimachinery.pkg.apis.meta.v1.Patch": {
            "description": "Patch is provided to give a concrete name and type to the Kubernetes PATCH request body."
        },
        "io.k8s.apimachinery.pkg.apis.meta.v1.Preconditions": {
            "description": "Preconditions must be fulfilled before an operation (update, delete, etc.) is carried out.",
            "properties": {
                "uid": {
                    "description": "Specifies the target UID.",
                    "type": "string"
                }
            }
        },
        "io.k8s.apimachinery.pkg.apis.meta.v1.Status": {
            "description": "Status is a return value for calls that don't return other objects.",
            "properties": {
                "apiVersion": {
                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
                    "type": "string"
                },
                "code": {
                    "description": "Suggested HTTP return code for this status, 0 if not set.",
                    "format": "int32",
                    "type": "integer"
                },
                "details": {
                    "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails",
                    "description": "Extended data associated with the reason.  Each reason may define its own extended details. This field is optional and the data returned is not guaranteed to conform to any schema except that defined by the reason type."
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
                    "type": "string"
                },
                "message": {
                    "description": "A human-readable description of the status of this operation.",
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
                    "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
                },
                "reason": {
                    "description": "A machine-readable description of why this operation is in the \"Failure\" status. If this value is empty there is no information available. A Reason clarifies an HTTP status code but does not override it.",
                    "type": "string"
                },
                "status": {
                    "description": "Status of the operation. One of: \"Success\" or \"Failure\". More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status",
                    "type": "string"
                }
            },
            "x-kubernetes-group-version-kind": [
                {
                    "group": "",
                    "kind": "Status",
                    "version": "v1"
                }
            ]
        },
        "io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause": {
            "description": "StatusCause provides more information about an api.Status failure, including cases when multiple errors are encountered.",
            "properties": {
                "field": {
                    "description": "The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.\n\nExamples:\n  \"name\" - the field \"name\" on the current resource\n  \"items[0].name\" - the field \"name\" on the first array entry in \"items\"",
                    "type": "string"
                },
                "message": {
                    "description": "A human-readable description of the cause of the error.  This field may be presented as-is to a reader.",
                    "type": "string"
                },
                "reason": {
                    "description": "A machine-readable description of the cause of the error. If this value is empty there is no information available.",
                    "type": "string"
                }
            }
        },
        "io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails": {
            "description": "StatusDetails is a set of additional properties that MAY be set by the server to provide additional information about a response. The Reason field of a Status object defines what attributes will be set. Clients must ignore fields that do not match the defined type of each attribute, and should assume that any attribute may be empty, invalid, or under defined.",
            "properties": {
                "causes": {
                    "description": "The Causes array includes more details associated with the StatusReason failure. Not all StatusReasons may provide detailed causes.",
                    "items": {
                        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause"
                    },
                    "type": "array"
                },
                "group": {
                    "description": "The group attribute of the resource associated with the status StatusReason.",
                    "type": "string"
                },
                "kind": {
                    "description": "The kind attribute of the resource associated with the status StatusReason. On some operations may differ from the requested resource Kind. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
                    "type": "string"
                },
                "name": {
                    "description": "The name attribute of the resource associated with the status StatusReason (when there is a single name which can be described).",
                    "type": "string"
                },
                "retryAfterSeconds": {
                    "description": "If specified, the time in seconds before the operation should be retried. Some errors may indicate the client must take an alternate action - for those errors this field may indicate how long to wait before taking the alternate action.",
                    "format": "int32",
                    "type": "integer"
                },
                "uid": {
                    "description": "UID of the resource. (when there is a single resource which can be described). More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                    "type": "string"
                }
            }
        },
        "io.k8s.apimachinery.pkg.apis.meta.v1.Time": {
            "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
            "format": "date-time",
            "type": "string"
        },
        "io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent": {
            "description": "Event represents a single event to a watched resource.",
            "properties": {
                "object": {
                    "$ref": "#/definitions/io.k8s.apimachinery.pkg.runtime.RawExtension",
                    "description": "Object is:\n * If Type is Added or Modified: the new state of the object.\n * If Type is Deleted: the state of the object immediately before deletion.\n * If Type is Error: *Status is recommended; other types may make sense\n   depending on context."
                },
                "type": {
                    "type": "string"
                }
            },
            "required": [
                "type",
                "object"
            ],
            "x-kubernetes-group-version-kind": [
                {
                    "group": "",
                    "kind": "WatchEvent",
                    "version": "v1"
                },
                {
                    "group": "admission.k8s.io",
                    "kind": "WatchEvent",
                    "version": "v1beta1"
                },
                {
                    "group": "admissionregistration.k8s.io",
                    "kind": "WatchEvent",
                    "version": "v1alpha1"
                },
                {
                    "group": "admissionregistration.k8s.io",
                    "kind": "WatchEvent",
                    "version": "v1beta1"
                },
                {
                    "group": "apiextensions.k8s.io",
                    "kind": "WatchEvent",
                    "version": "v1beta1"
                },
                {
                    "group": "apiregistration.k8s.io",
                    "kind": "WatchEvent",
                    "version": "v1"
                },
                {
                    "group": "apiregistration.k8s.io",
                    "kind": "WatchEvent",
                    "version": "v1beta1"
                },
                {
                    "group": "apps",
                    "kind": "WatchEvent",
                    "version": "v1"
                },
                {
                    "group": "apps",
                    "kind": "WatchEvent",
                    "version": "v1beta1"
                },
                {
                    "group": "apps",
                    "kind": "WatchEvent",
                    "version": "v1beta2"
                },
                {
                    "group": "auditregistration.k8s.io",
                    "kind": "WatchEvent",
                    "version": "v1alpha1"
                },
                {
                    "group": "authentication.k8s.io",
                    "kind": "WatchEvent",
                    "version": "v1"
                },
                {
                    "group": "authentication.k8s.io",
                    "kind": "WatchEvent",
                    "version": "v1beta1"
                },
                {
                    "group": "authorization.k8s.io",
                    "kind": "WatchEvent",
                    "version": "v1"
                },
                {
                    "group": "authorization.k8s.io",
                    "kind": "WatchEvent",
                    "version": "v1beta1"
                },
                {
                    "group": "autoscaling",
                    "kind": "WatchEvent",
                    "version": "v1"
                },
                {
                    "group": "autoscaling",
                    "kind": "WatchEvent",
                    "version": "v2beta1"
                },
                {
                    "group": "autoscaling",
                    "kind": "WatchEvent",
                    "version": "v2beta2"
                },
                {
                    "group": "batch",
                    "kind": "WatchEvent",
                    "version": "v1"
                },
                {
                    "group": "batch",
                    "kind": "WatchEvent",
                    "version": "v1beta1"
                },
                {
                    "group": "batch",
                    "kind": "WatchEvent",
                    "version": "v2alpha1"
                },
                {
                    "group": "certificates.k8s.io",
                    "kind": "WatchEvent",
                    "version": "v1beta1"
                },
                {
                    "group": "coordination.k8s.io",
                    "kind": "WatchEvent",
                    "version": "v1beta1"
                },
                {
                    "group": "events.k8s.io",
                    "kind": "WatchEvent",
                    "version": "v1beta1"
                },
                {
                    "group": "extensions",
                    "kind": "WatchEvent",
                    "version": "v1beta1"
                },
                {
                    "group": "imagepolicy.k8s.io",
                    "kind": "WatchEvent",
                    "version": "v1alpha1"
                },
                {
                    "group": "networking.k8s.io",
                    "kind": "WatchEvent",
                    "version": "v1"
                },
                {
                    "group": "policy",
                    "kind": "WatchEvent",
                    "version": "v1beta1"
                },
                {
                    "group": "rbac.authorization.k8s.io",
                    "kind": "WatchEvent",
                    "version": "v1"
                },
                {
                    "group": "rbac.authorization.k8s.io",
                    "kind": "WatchEvent",
                    "version": "v1alpha1"
                },
                {
                    "group": "rbac.authorization.k8s.io",
                    "kind": "WatchEvent",
                    "version": "v1beta1"
                },
                {
                    "group": "scheduling.k8s.io",
                    "kind": "WatchEvent",
                    "version": "v1alpha1"
                },
                {
                    "group": "scheduling.k8s.io",
                    "kind": "WatchEvent",
                    "version": "v1beta1"
                },
                {
                    "group": "settings.k8s.io",
                    "kind": "WatchEvent",
                    "version": "v1alpha1"
                },
                {
                    "group": "storage.k8s.io",
                    "kind": "WatchEvent",
                    "version": "v1"
                },
                {
                    "group": "storage.k8s.io",
                    "kind": "WatchEvent",
                    "version": "v1alpha1"
                },
                {
                    "group": "storage.k8s.io",
                    "kind": "WatchEvent",
                    "version": "v1beta1"
                }
            ]
        },
        "io.k8s.apimachinery.pkg.runtime.RawExtension": {
            "description": "RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned struct, and Object in your internal struct. You also need to register your various plugin types.\n\n// Internal package: type MyAPIObject struct {\n\truntime.TypeMeta `json:\",inline\"`\n\tMyPlugin runtime.Object `json:\"myPlugin\"`\n} type PluginA struct {\n\tAOption string `json:\"aOption\"`\n}\n\n// External package: type MyAPIObject struct {\n\truntime.TypeMeta `json:\",inline\"`\n\tMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n} type PluginA struct {\n\tAOption string `json:\"aOption\"`\n}\n\n// On the wire, the JSON will look something like this: {\n\t\"kind\":\"MyAPIObject\",\n\t\"apiVersion\":\"v1\",\n\t\"myPlugin\": {\n\t\t\"kind\":\"PluginA\",\n\t\t\"aOption\":\"foo\",\n\t},\n}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into your external MyAPIObject. That causes the raw JSON to be stored, but not unpacked. The next step is to copy (using pkg/conversion) into the internal struct. The runtime package's DefaultScheme has conversion functions installed which will unpack the JSON stored in RawExtension, turning it into the correct object type, and storing it in the Object. (TODO: In the case where the object is of an unknown type, a runtime.Unknown object will be created and stored.)",
            "properties": {
                "Raw": {
                    "description": "Raw is the underlying serialization of this object.",
                    "format": "byte",
                    "type": "string"
                }
            },
            "required": [
                "Raw"
            ]
        },
        "io.k8s.apimachinery.pkg.util.intstr.IntOrString": {
            "description": "IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number.",
            "format": "int-or-string",
            "type": "string"
        }
    }
}